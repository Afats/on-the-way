{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\PageControl.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { withTheme } from \"../core/theming\";\nvar DEFAULT_SIZE = 8;\n\nvar PageControl = function (_React$Component) {\n  _inherits(PageControl, _React$Component);\n\n  var _super = _createSuper(PageControl);\n\n  function PageControl() {\n    var _this;\n\n    _classCallCheck(this, PageControl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.dot = {\n      width: _this.props.size || DEFAULT_SIZE,\n      height: _this.props.size || DEFAULT_SIZE,\n      borderRadius: _this.props.size || DEFAULT_SIZE,\n      margin: (_this.props.size || DEFAULT_SIZE) / 2\n    };\n    _this.activeDot = {\n      backgroundColor: _this.props.currentPageIndicatorTintColor || _this.props.theme.barColor\n    };\n    _this.inactiveDot = {\n      backgroundColor: _this.props.pageIndicatorTintColor || _this.props.theme.dividerColor\n    };\n    _this.dotWrapper = {\n      width: (_this.props.size || DEFAULT_SIZE) * 2,\n      height: (_this.props.size || DEFAULT_SIZE) * 2\n    };\n\n    _this.updateCurrentPage = function (idx) {\n      var _this$props = _this.props,\n          currentPage = _this$props.currentPage,\n          updateCurrentPageDisplay = _this$props.updateCurrentPageDisplay,\n          numberOfPages = _this$props.numberOfPages;\n      if (!updateCurrentPageDisplay || typeof updateCurrentPageDisplay !== 'function') return;\n      if (idx > currentPage && currentPage + 1 <= numberOfPages) updateCurrentPageDisplay(currentPage + 1);else if (idx < currentPage && currentPage > 0) updateCurrentPageDisplay(currentPage - 1);\n    };\n\n    return _this;\n  }\n\n  _createClass(PageControl, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          numberOfPages = _this$props2.numberOfPages,\n          currentPage = _this$props2.currentPage,\n          hidesForSinglePage = _this$props2.hidesForSinglePage;\n      if (hidesForSinglePage && numberOfPages === 1) return null;\n      return React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, _toConsumableArray(Array(numberOfPages).keys()).map(function (idx) {\n        return React.createElement(TouchableWithoutFeedback, {\n          key: \"pageControlDot_\" + idx,\n          onPress: function onPress() {\n            return _this2.updateCurrentPage(idx);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [styles.dotWrapper, _this2.dotWrapper],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: [_this2.dot, idx === currentPage ? _this2.activeDot : _this2.inactiveDot],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return PageControl;\n}(React.Component);\n\nexport default withTheme(PageControl);\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingVertical: 5\n  },\n  dotWrapper: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/PageControl.js"],"names":["React","withTheme","DEFAULT_SIZE","PageControl","dot","width","props","size","height","borderRadius","margin","activeDot","backgroundColor","currentPageIndicatorTintColor","theme","barColor","inactiveDot","pageIndicatorTintColor","dividerColor","dotWrapper","updateCurrentPage","idx","currentPage","updateCurrentPageDisplay","numberOfPages","hidesForSinglePage","styles","row","Array","keys","map","Component","StyleSheet","create","flexDirection","justifyContent","paddingVertical","alignItems"],"mappings":"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","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, TouchableWithoutFeedback } from 'react-native';\r\n\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types/Theme';\r\n\r\ntype Props = {\r\n  theme: Theme,\r\n  currentPage: number,\r\n  numberOfPages: number,\r\n  hidesForSinglePage?: boolean,\r\n  pageIndicatorTintColor?: string,\r\n  currentPageIndicatorTintColor?: string,\r\n  updateCurrentPageDisplay?: number => void,\r\n  size?: number,\r\n};\r\n\r\nconst DEFAULT_SIZE = 8;\r\n\r\nclass PageControl extends React.Component<Props> {\r\n  dot = {\r\n    width: this.props.size || DEFAULT_SIZE,\r\n    height: this.props.size || DEFAULT_SIZE,\r\n    borderRadius: this.props.size || DEFAULT_SIZE,\r\n    margin: (this.props.size || DEFAULT_SIZE) / 2,\r\n  };\r\n  activeDot = {\r\n    backgroundColor:\r\n      this.props.currentPageIndicatorTintColor || this.props.theme.barColor,\r\n  };\r\n  inactiveDot = {\r\n    backgroundColor:\r\n      this.props.pageIndicatorTintColor || this.props.theme.dividerColor,\r\n  };\r\n  dotWrapper = {\r\n    width: (this.props.size || DEFAULT_SIZE) * 2,\r\n    height: (this.props.size || DEFAULT_SIZE) * 2,\r\n  };\r\n\r\n  updateCurrentPage = (idx: number) => {\r\n    const { currentPage, updateCurrentPageDisplay, numberOfPages } = this.props;\r\n    if (\r\n      !updateCurrentPageDisplay ||\r\n      typeof updateCurrentPageDisplay !== 'function'\r\n    )\r\n      return;\r\n    if (idx > currentPage && currentPage + 1 <= numberOfPages)\r\n      updateCurrentPageDisplay(currentPage + 1);\r\n    else if (idx < currentPage && currentPage > 0)\r\n      updateCurrentPageDisplay(currentPage - 1);\r\n  };\r\n\r\n  render() {\r\n    const { numberOfPages, currentPage, hidesForSinglePage } = this.props;\r\n    if (hidesForSinglePage && numberOfPages === 1) return null;\r\n\r\n    return (\r\n      <View style={styles.row}>\r\n        {[...Array(numberOfPages).keys()].map(idx => (\r\n          <TouchableWithoutFeedback\r\n            key={`pageControlDot_${idx}`}\r\n            onPress={() => this.updateCurrentPage(idx)}\r\n          >\r\n            <View style={[styles.dotWrapper, this.dotWrapper]}>\r\n              <View\r\n                style={[\r\n                  this.dot,\r\n                  idx === currentPage ? this.activeDot : this.inactiveDot,\r\n                ]}\r\n              />\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        ))}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(PageControl);\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    paddingVertical: 5,\r\n  },\r\n  dotWrapper: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}