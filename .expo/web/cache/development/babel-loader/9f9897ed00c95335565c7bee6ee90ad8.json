{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\TabBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Icon from \"./Icon\";\nimport { Caption2 } from \"./Typography\";\nimport { withTheme } from \"../\";\n\nvar TabBar = function (_PureComponent) {\n  _inherits(TabBar, _PureComponent);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar() {\n    _classCallCheck(this, TabBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$theme = _this$props.theme,\n          barColor = _this$props$theme.barColor,\n          dividerColor = _this$props$theme.dividerColor,\n          primaryColor = _this$props$theme.primaryColor,\n          disabledColor = _this$props$theme.disabledColor,\n          primaryLightColor = _this$props$theme.primaryLightColor,\n          tabs = _this$props.tabs;\n      var tabBarStyle = {\n        backgroundColor: barColor,\n        borderTopColor: dividerColor\n      };\n\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width;\n\n      return React.createElement(View, {\n        style: [styles.wrapper, tabBarStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, tabs.map(function (tab, idx) {\n        return React.createElement(TouchableWithoutFeedback, {\n          key: \"tabItem_\" + idx,\n          onPress: function onPress() {\n            return tab.onPress(idx);\n          },\n          disabled: tab.disabled || tab.isActive,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [styles.tabItem, {\n            width: width / tabs.length\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }, React.createElement(Icon, {\n          name: tab.icon,\n          size: 30,\n          color: tab.isActive ? primaryColor : tab.disabled ? disabledColor : primaryLightColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        }), React.createElement(Caption2, {\n          style: {\n            color: tab.isActive ? primaryColor : tab.disabled ? disabledColor : primaryLightColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        }, tab.title)));\n      }));\n    }\n  }]);\n\n  return TabBar;\n}(PureComponent);\n\nexport default withTheme(TabBar);\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    borderTopWidth: 1\n  },\n  tabItem: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 4\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/TabBar.js"],"names":["React","PureComponent","Icon","Caption2","withTheme","TabBar","props","theme","barColor","dividerColor","primaryColor","disabledColor","primaryLightColor","tabs","tabBarStyle","backgroundColor","borderTopColor","Dimensions","get","width","styles","wrapper","map","tab","idx","onPress","disabled","isActive","tabItem","length","icon","color","title","StyleSheet","create","position","bottom","left","right","flexDirection","borderTopWidth","justifyContent","alignItems","paddingVertical"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;;AAQA,OAAOC,IAAP;AACA,SAASC,QAAT;AACA,SAASC,SAAT;;IA2BMC,M;;;;;;;;;;;;;6BACK;AAAA,wBAUH,KAAKC,KAVF;AAAA,0CAELC,KAFK;AAAA,UAGHC,QAHG,qBAGHA,QAHG;AAAA,UAIHC,YAJG,qBAIHA,YAJG;AAAA,UAKHC,YALG,qBAKHA,YALG;AAAA,UAMHC,aANG,qBAMHA,aANG;AAAA,UAOHC,iBAPG,qBAOHA,iBAPG;AAAA,UASLC,IATK,eASLA,IATK;AAWP,UAAMC,WAAW,GAAG;AAClBC,QAAAA,eAAe,EAAEP,QADC;AAElBQ,QAAAA,cAAc,EAAEP;AAFE,OAApB;;AAXO,4BAeWQ,UAAU,CAACC,GAAX,CAAe,QAAf,CAfX;AAAA,UAeCC,KAfD,mBAeCA,KAfD;;AAgBP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,OAAR,EAAiBP,WAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACS,GAAL,CAAS,UAACC,GAAD,EAAMC,GAAN;AAAA,eACR,oBAAC,wBAAD;AAEE,UAAA,GAAG,eAAaA,GAFlB;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMD,GAAG,CAACE,OAAJ,CAAYD,GAAZ,CAAN;AAAA,WAHX;AAIE,UAAA,QAAQ,EAAED,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACI,QAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACP,MAAM,CAACQ,OAAR,EAAiB;AAAET,YAAAA,KAAK,EAAEA,KAAK,GAAGN,IAAI,CAACgB;AAAtB,WAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,IAAI,EAAEN,GAAG,CAACO,IADZ;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,KAAK,EACHP,GAAG,CAACI,QAAJ,GACIjB,YADJ,GAEIa,GAAG,CAACG,QAAJ,GACAf,aADA,GAEAC,iBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAYE,oBAAC,QAAD;AACE,UAAA,KAAK,EAAE;AACLmB,YAAAA,KAAK,EAAER,GAAG,CAACI,QAAJ,GACHjB,YADG,GAEHa,GAAG,CAACG,QAAJ,GACAf,aADA,GAEAC;AALC,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASGW,GAAG,CAACS,KATP,CAZF,CANF,CADQ;AAAA,OAAT,CADH,CADF;AAqCD;;;;EAtDkB/B,a;;AAyDrB,eAAeG,SAAS,CAACC,MAAD,CAAxB;AAEA,IAAMe,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,OAAO,EAAE;AACPc,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,aAAa,EAAE,KALR;AAMPC,IAAAA,cAAc,EAAE;AANT,GADsB;AAS/BZ,EAAAA,OAAO,EAAE;AACPa,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,eAAe,EAAE;AAHV;AATsB,CAAlB,CAAf","sourcesContent":["/* @flow */\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nimport Icon from './Icon';\r\nimport { Caption2 } from './Typography';\r\nimport { withTheme } from '../';\r\nimport type { Theme } from '../types/Theme';\r\n\r\ntype TabItem = {\r\n  icon?: string,\r\n  title?: string,\r\n  onPress: (tabIndex: number) => void,\r\n  isActive?: boolean,\r\n  disabled?: boolean,\r\n};\r\n\r\ntype Props = {\r\n  /**\r\n   * Array of Tabs. Each TabItem needs to have below shape:\r\n   * icon: Icon name, one of https://github.com/oblador/react-native-vector-icons/blob/master/glyphmaps/Ionicons.json\r\n   * title: string,\r\n   * onPress: function to be called when Tab is tapped\r\n   * isActive: boolean, indicating wheter Tab is active\r\n   * disabled?: boolean, (optional), diasables a Tab\r\n   */\r\n  tabs: Array<TabItem>,\r\n  /**\r\n   * Provided by the ThemeProvider\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\nclass TabBar extends PureComponent<Props> {\r\n  render() {\r\n    const {\r\n      theme: {\r\n        barColor,\r\n        dividerColor,\r\n        primaryColor,\r\n        disabledColor,\r\n        primaryLightColor,\r\n      },\r\n      tabs,\r\n    } = this.props;\r\n    const tabBarStyle = {\r\n      backgroundColor: barColor,\r\n      borderTopColor: dividerColor,\r\n    };\r\n    const { width } = Dimensions.get('window');\r\n    return (\r\n      <View style={[styles.wrapper, tabBarStyle]}>\r\n        {tabs.map((tab, idx) => (\r\n          <TouchableWithoutFeedback\r\n            // eslint-disable-next-line\r\n            key={`tabItem_${idx}`}\r\n            onPress={() => tab.onPress(idx)}\r\n            disabled={tab.disabled || tab.isActive}\r\n          >\r\n            <View style={[styles.tabItem, { width: width / tabs.length }]}>\r\n              <Icon\r\n                name={tab.icon}\r\n                size={30}\r\n                color={\r\n                  tab.isActive\r\n                    ? primaryColor\r\n                    : tab.disabled\r\n                    ? disabledColor\r\n                    : primaryLightColor\r\n                }\r\n              />\r\n              <Caption2\r\n                style={{\r\n                  color: tab.isActive\r\n                    ? primaryColor\r\n                    : tab.disabled\r\n                    ? disabledColor\r\n                    : primaryLightColor,\r\n                }}\r\n              >\r\n                {tab.title}\r\n              </Caption2>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        ))}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(TabBar);\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    flexDirection: 'row',\r\n    borderTopWidth: 1,\r\n  },\r\n  tabItem: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 4,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}