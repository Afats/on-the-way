{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./screens/HomeScreen\";\nimport DashBoard from \"./screens/Dashboard\";\nimport Balance from \"./screens/Balance\";\nimport TopUp from \"./screens/TopUp\";\nimport TapOn from \"./screens/TapOn\";\nimport TapSucc from \"./screens/TapSucc\";\nimport Account from \"./screens/Account\";\nimport TopUpSuccess from \"./screens/TopUpSuccess\";\nimport PayDetails from \"./screens/PayDetails\";\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isReady: false\n    };\n\n    _this.performTimeConsumingTask = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve) {\n                return setTimeout(function () {\n                  resolve('result');\n                }, 2000);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.performTimeConsumingTask());\n\n            case 2:\n              data = _context2.sent;\n\n              if (data !== null) {\n                this.setState({\n                  isReady: !this.isReady\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isReady) {\n        return React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        });\n      }\n\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"DashBoard\",\n        screenOptions: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        options: {\n          headerShown: true\n        },\n        name: \"DashBoard\",\n        component: DashBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Balance\",\n        component: Balance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TapOn\",\n        component: TapOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TapSuccess\",\n        component: TapSucc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Account\",\n        component: Account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TopUp\",\n        component: TopUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TopUpSuccess\",\n        component: TopUpSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        options: {\n          headerShown: true\n        },\n        name: \"Payment\",\n        component: PayDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/App.js"],"names":["React","NavigationContainer","createStackNavigator","Home","DashBoard","Balance","TopUp","TapOn","TapSucc","Account","TopUpSuccess","PayDetails","AppLoading","Asset","Stack","App","state","isReady","performTimeConsumingTask","Promise","resolve","setTimeout","data","setState","headerShown","Component"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport * as React from 'react';\r\nimport { View, Text, Animated } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from \"./screens/HomeScreen\";\r\nimport DashBoard from \"./screens/Dashboard\";\r\nimport Balance from \"./screens/Balance\";\r\nimport TopUp from \"./screens/TopUp\";\r\nimport TapOn from \"./screens/TapOn\";\r\nimport TapSucc from \"./screens/TapSucc\";\r\nimport Account from \"./screens/Account\";\r\nimport TopUpSuccess from \"./screens/TopUpSuccess\";\r\nimport PayDetails from \"./screens/PayDetails\";\r\nimport { AppLoading } from 'expo';\r\nimport { Asset } from 'expo-asset';\r\n\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nexport default class App extends React.Component  {\r\n\r\n    state = {\r\n      isReady: false,\r\n    };\r\n\r\n    performTimeConsumingTask = async() => {\r\n      return new Promise((resolve) =>\r\n        setTimeout(\r\n          () => { resolve('result')},\r\n          2000\r\n        )\r\n      );\r\n    }\r\n\r\n    async componentDidMount() {\r\n      // Preload data from an external API\r\n      // Preload data using AsyncStorage\r\n      const data = await this.performTimeConsumingTask();\r\n\r\n      if (data !== null) {\r\n        this.setState({ isReady: !this.isReady });\r\n      }\r\n    }\r\n\r\n    render(){\r\n      if(!this.state.isReady){\r\n        return(\r\n          <Home />\r\n        );\r\n      }\r\n\r\n      return (\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName=\"DashBoard\" screenOptions={{ headerShown: false}}>\r\n            <Stack.Screen options={{ headerShown: true }} name=\"DashBoard\" component={DashBoard} />\r\n            <Stack.Screen name=\"Balance\" component={Balance} />\r\n            <Stack.Screen name=\"TapOn\" component={TapOn} />\r\n            <Stack.Screen name=\"TapSuccess\" component={TapSucc} />\r\n            <Stack.Screen name=\"Account\" component={Account} />\r\n            <Stack.Screen name=\"TopUp\" component={TopUp} />\r\n            <Stack.Screen name=\"TopUpSuccess\" component={TopUpSuccess} />\r\n            <Stack.Screen options={{ headerShown: true }} name=\"Payment\" component={PayDetails} />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      );\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}