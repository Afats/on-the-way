{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\Spinner.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { withTheme } from \"../\";\n\nvar Spinner = function (_Component) {\n  _inherits(Spinner, _Component);\n\n  var _super = _createSuper(Spinner);\n\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Spinner, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          animating = _this$props.animating,\n          size = _this$props.size,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          primaryColor = _this$props.theme.primaryColor;\n      return React.createElement(ActivityIndicator, {\n        animating: animating,\n        size: size,\n        hidesWhenStopped: hidesWhenStopped,\n        color: primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Spinner;\n}(Component);\n\nSpinner.defaultProps = {\n  animating: true,\n  size: 'small',\n  hidesWhenStopped: true\n};\nexport default withTheme(Spinner);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/Spinner.js"],"names":["React","Component","withTheme","Spinner","props","animating","size","hidesWhenStopped","primaryColor","theme","defaultProps"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,SAASC,SAAT;;IASMC,O;;;;;;;;;;;;;6BAMK;AAAA,wBAMH,KAAKC,KANF;AAAA,UAELC,SAFK,eAELA,SAFK;AAAA,UAGLC,IAHK,eAGLA,IAHK;AAAA,UAILC,gBAJK,eAILA,gBAJK;AAAA,UAKIC,YALJ,eAKLC,KALK,CAKID,YALJ;AAOP,aACE,oBAAC,iBAAD;AACE,QAAA,SAAS,EAAEH,SADb;AAEE,QAAA,IAAI,EAAEC,IAFR;AAGE,QAAA,gBAAgB,EAAEC,gBAHpB;AAIE,QAAA,KAAK,EAAEC,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;;EArBmBP,S;;AAAhBE,O,CACGO,Y,GAAe;AACpBL,EAAAA,SAAS,EAAE,IADS;AAEpBC,EAAAA,IAAI,EAAE,OAFc;AAGpBC,EAAAA,gBAAgB,EAAE;AAHE,C;AAuBxB,eAAeL,SAAS,CAACC,OAAD,CAAxB","sourcesContent":["/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\n\r\nimport type { Theme } from '../types/Theme';\r\nimport { withTheme } from '../';\r\n\r\ntype Props = {\r\n  theme: Theme,\r\n  animating: boolean,\r\n  size: 'small' | 'large',\r\n  hidesWhenStopped: boolean,\r\n};\r\n\r\nclass Spinner extends Component<Props> {\r\n  static defaultProps = {\r\n    animating: true,\r\n    size: 'small',\r\n    hidesWhenStopped: true,\r\n  };\r\n  render() {\r\n    const {\r\n      animating,\r\n      size,\r\n      hidesWhenStopped,\r\n      theme: { primaryColor },\r\n    } = this.props;\r\n    return (\r\n      <ActivityIndicator\r\n        animating={animating}\r\n        size={size}\r\n        hidesWhenStopped={hidesWhenStopped}\r\n        color={primaryColor}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Spinner);\r\n"]},"metadata":{},"sourceType":"module"}