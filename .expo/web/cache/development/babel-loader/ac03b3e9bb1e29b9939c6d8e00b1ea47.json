{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\TableView\\\\TableViewFooter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { withTheme } from \"../../core/theming\";\nimport { Footnote } from \"../Typography\";\n\nvar TableViewFooter = function (_React$Component) {\n  _inherits(TableViewFooter, _React$Component);\n\n  var _super = _createSuper(TableViewFooter);\n\n  function TableViewFooter() {\n    var _this;\n\n    _classCallCheck(this, TableViewFooter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderFooter = function () {\n      var _this$props = _this.props,\n          footer = _this$props.footer,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          onPress = _this$props.onPress;\n      return React.createElement(View, {\n        style: [styles.footer, {\n          backgroundColor: theme.footnoteBackgroundColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(Footnote, {\n        style: {\n          color: onPress ? theme.primaryColor : theme.footnoteColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, footer));\n    };\n\n    _this.renderTouchableFooter = function () {\n      return React.createElement(TouchableHighlight, {\n        onPress: _this.props.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      }, _this.renderFooter());\n    };\n\n    return _this;\n  }\n\n  _createClass(TableViewFooter, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.onPress ? this.renderTouchableFooter() : this.renderFooter();\n    }\n  }]);\n\n  return TableViewFooter;\n}(React.Component);\n\nexport default withTheme(TableViewFooter);\nvar styles = StyleSheet.create({\n  footer: {\n    paddingHorizontal: 15,\n    paddingTop: 7,\n    paddingBottom: 15\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/TableView/TableViewFooter.js"],"names":["React","withTheme","Footnote","TableViewFooter","renderFooter","props","footer","theme","style","onPress","styles","backgroundColor","footnoteBackgroundColor","color","primaryColor","footnoteColor","renderTouchableFooter","Component","StyleSheet","create","paddingHorizontal","paddingTop","paddingBottom"],"mappings":";;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,SAASC,SAAT;AACA,SAASC,QAAT;;IAWMC,e;;;;;;;;;;;;;;;;UACJC,Y,GAAe,YAAM;AAAA,wBACuB,MAAKC,KAD5B;AAAA,UACXC,MADW,eACXA,MADW;AAAA,UACHC,KADG,eACHA,KADG;AAAA,UACIC,KADJ,eACIA,KADJ;AAAA,UACWC,OADX,eACWA,OADX;AAEnB,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLC,MAAM,CAACJ,MADF,EAEL;AAAEK,UAAAA,eAAe,EAAEJ,KAAK,CAACK;AAAzB,SAFK,EAGLJ,KAHK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAEJ,OAAO,GAAGF,KAAK,CAACO,YAAT,GAAwBP,KAAK,CAACQ;AAA9C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGT,MAHH,CAPF,CADF;AAeD,K;;UAEDU,qB,GAAwB;AAAA,aACtB,oBAAC,kBAAD;AAAoB,QAAA,OAAO,EAAE,MAAKX,KAAL,CAAWI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,MAAKL,YAAL,EADH,CADsB;AAAA,K;;;;;;;6BAMf;AACP,aAAO,KAAKC,KAAL,CAAWI,OAAX,GACH,KAAKO,qBAAL,EADG,GAEH,KAAKZ,YAAL,EAFJ;AAGD;;;;EA9B2BJ,KAAK,CAACiB,S;;AAiCpC,eAAehB,SAAS,CAACE,eAAD,CAAxB;AAEA,IAAMO,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,MAAM,EAAE;AACNc,IAAAA,iBAAiB,EAAE,EADb;AAENC,IAAAA,UAAU,EAAE,CAFN;AAGNC,IAAAA,aAAa,EAAE;AAHT;AADuB,CAAlB,CAAf","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, TouchableHighlight } from 'react-native';\r\n\r\nimport { withTheme } from '../../core/theming';\r\nimport { Footnote } from '../Typography';\r\nimport type { Theme } from '../../types/Theme';\r\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\r\n\r\ntype Props = {\r\n  footer: string,\r\n  theme: Theme,\r\n  style?: ViewStyleProp,\r\n  onPress?: Function,\r\n};\r\n\r\nclass TableViewFooter extends React.Component<Props> {\r\n  renderFooter = () => {\r\n    const { footer, theme, style, onPress } = this.props;\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.footer,\r\n          { backgroundColor: theme.footnoteBackgroundColor },\r\n          style,\r\n        ]}\r\n      >\r\n        <Footnote\r\n          style={{ color: onPress ? theme.primaryColor : theme.footnoteColor }}\r\n        >\r\n          {footer}\r\n        </Footnote>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  renderTouchableFooter = () => (\r\n    <TouchableHighlight onPress={this.props.onPress}>\r\n      {this.renderFooter()}\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  render() {\r\n    return this.props.onPress\r\n      ? this.renderTouchableFooter()\r\n      : this.renderFooter();\r\n  }\r\n}\r\n\r\nexport default withTheme(TableViewFooter);\r\n\r\nconst styles = StyleSheet.create({\r\n  footer: {\r\n    paddingHorizontal: 15,\r\n    paddingTop: 7,\r\n    paddingBottom: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}