{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\Stepper.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\n\nvar Stepper = function (_React$Component) {\n  _inherits(Stepper, _React$Component);\n\n  var _super = _createSuper(Stepper);\n\n  function Stepper(props) {\n    var _this;\n\n    _classCallCheck(this, Stepper);\n\n    _this = _super.call(this, props);\n\n    _this.decrementOnCounter = function () {\n      var newValue = _this.props.value - _this.props.stepValue;\n\n      if (newValue >= _this.props.minValue) {\n        _this.props.onValueChange(newValue);\n      }\n    };\n\n    _this.incrementOnCounter = function () {\n      var newValue = _this.props.value + _this.props.stepValue;\n\n      if (newValue <= _this.props.maxValue) {\n        _this.props.onValueChange(newValue);\n      }\n    };\n\n    _this.handleIncrementPressIn = function () {\n      _this.incrementOnCounter();\n\n      _this._timeout = setTimeout(function () {\n        _this.startInterval(_this.incrementOnCounter);\n\n        _this.setState({\n          isIncrementing: true\n        });\n      }, 500);\n    };\n\n    _this.handleDecrementPressIn = function () {\n      _this.decrementOnCounter();\n\n      _this._timeout = setTimeout(function () {\n        _this.startInterval(_this.decrementOnCounter);\n\n        _this.setState({\n          isDecrementing: true\n        });\n      }, 500);\n    };\n\n    _this.handlePressOut = function () {\n      clearTimeout(_this._timeout);\n      clearInterval(_this._interval);\n\n      _this.setState({\n        isDecrementing: false,\n        isIncrementing: false\n      });\n    };\n\n    _this.startInterval = function (callback) {\n      var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n      var i = 0;\n      _this._interval = setInterval(function () {\n        callback();\n        i += 1;\n\n        if (i === 10) {\n          clearInterval(_this._interval);\n\n          _this.startInterval(callback, speed / 2);\n        }\n      }, speed);\n    };\n\n    if (props.value < props.minValue) {\n      throw new Error('Value cannot be lower than minValue');\n    }\n\n    if (props.value > props.maxValue) {\n      throw new Error('Value cannot be higher than maxValue');\n    }\n\n    if (props.minValue > props.maxValue) {\n      throw new Error('minValue cannot be higher than maxValue');\n    }\n\n    _this.state = {\n      isDecrementing: false,\n      isIncrementing: false\n    };\n    return _this;\n  }\n\n  _createClass(Stepper, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this._timeout);\n      clearInterval(this._interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          value = _this$props.value,\n          minValue = _this$props.minValue,\n          maxValue = _this$props.maxValue;\n      var primaryColor = theme.primaryColor,\n          primaryLightColor = theme.primaryLightColor;\n      var _this$state = this.state,\n          isIncrementing = _this$state.isIncrementing,\n          isDecrementing = _this$state.isDecrementing;\n      var isMinimum = value === minValue;\n      var isMaximum = value === maxValue;\n      return React.createElement(View, {\n        style: [styles.container, {\n          borderColor: primaryColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPressIn: this.handleDecrementPressIn,\n        onPressOut: this.handlePressOut,\n        disabled: isMinimum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [{\n          borderColor: primaryColor,\n          backgroundColor: isMinimum || !isDecrementing ? 'transparent' : primaryLightColor\n        }, styles.stepperIcon, styles.stepperMinus],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        name: \"md-remove\",\n        size: 20,\n        color: isMinimum ? primaryLightColor : primaryColor,\n        style: {\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPressIn: this.handleIncrementPressIn,\n        onPressOut: this.handlePressOut,\n        disabled: isMaximum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [{\n          borderColor: primaryColor,\n          backgroundColor: isMaximum || !isIncrementing ? 'transparent' : primaryLightColor\n        }, styles.stepperIcon, styles.stepperPlus],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        name: \"md-add\",\n        size: 20,\n        color: isMaximum ? primaryLightColor : primaryColor,\n        style: {\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Stepper;\n}(React.Component);\n\nStepper.defaultProps = {\n  minValue: 0,\n  maxValue: 100,\n  stepValue: 1\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    width: 94,\n    height: 29,\n    borderWidth: StyleSheet.hairlineWidth * 2,\n    borderRadius: 4,\n    overflow: 'hidden'\n  },\n  stepperIcon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  stepperMinus: {\n    borderRightWidth: StyleSheet.hairlineWidth\n  },\n  stepperPlus: {\n    borderLeftWidth: StyleSheet.hairlineWidth\n  }\n});\nexport default withTheme(Stepper);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/Stepper.js"],"names":["React","Icon","withTheme","Stepper","props","decrementOnCounter","newValue","value","stepValue","minValue","onValueChange","incrementOnCounter","maxValue","handleIncrementPressIn","_timeout","setTimeout","startInterval","setState","isIncrementing","handleDecrementPressIn","isDecrementing","handlePressOut","clearTimeout","clearInterval","_interval","callback","speed","i","setInterval","Error","state","theme","primaryColor","primaryLightColor","isMinimum","isMaximum","styles","container","borderColor","backgroundColor","stepperIcon","stepperMinus","marginTop","stepperPlus","Component","defaultProps","StyleSheet","create","flexDirection","width","height","borderWidth","hairlineWidth","borderRadius","overflow","alignItems","justifyContent","flex","borderRightWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport { StyleSheet, View, TouchableWithoutFeedback } from 'react-native';\r\n\r\nimport Icon from './Icon';\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types/Theme';\r\n\r\ntype Props = {\r\n  /**\r\n   * Provided by the ThemeProvider\r\n   */\r\n  theme: Theme,\r\n  /**\r\n   * Callback function on changing counter result\r\n   */\r\n  onValueChange: (counter: number) => void,\r\n  /**\r\n   * The lowest possible numeric value for the stepper.\r\n   * Default value is 0.\r\n   */\r\n  minValue: number,\r\n  /**\r\n   * The highest possible numeric value for the stepper.\r\n   * The default value of this property is 100.\r\n   */\r\n  maxValue: number,\r\n  /**\r\n   * The numeric value of the stepper.\r\n   */\r\n  value: number,\r\n  /**\r\n   * The step, or increment, value for the stepper.\r\n   * The default value for this property is 1.\r\n   */\r\n  stepValue: number,\r\n};\r\n\r\ntype State = {\r\n  isDecrementing: boolean,\r\n  isIncrementing: boolean,\r\n};\r\n/**\r\n * Stepper component\r\n */\r\nclass Stepper extends React.Component<Props, State> {\r\n  static defaultProps = {\r\n    minValue: 0,\r\n    maxValue: 100,\r\n    stepValue: 1,\r\n  };\r\n  constructor(props: Props) {\r\n    super(props);\r\n    if (props.value < props.minValue) {\r\n      throw new Error('Value cannot be lower than minValue');\r\n    }\r\n    if (props.value > props.maxValue) {\r\n      throw new Error('Value cannot be higher than maxValue');\r\n    }\r\n    if (props.minValue > props.maxValue) {\r\n      throw new Error('minValue cannot be higher than maxValue');\r\n    }\r\n\r\n    this.state = {\r\n      isDecrementing: false,\r\n      isIncrementing: false,\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    clearTimeout(this._timeout);\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  _interval: IntervalID;\r\n  _timeout: TimeoutID;\r\n\r\n  decrementOnCounter = () => {\r\n    const newValue = this.props.value - this.props.stepValue;\r\n    if (newValue >= this.props.minValue) {\r\n      this.props.onValueChange(newValue);\r\n    }\r\n  };\r\n\r\n  incrementOnCounter = () => {\r\n    const newValue = this.props.value + this.props.stepValue;\r\n    if (newValue <= this.props.maxValue) {\r\n      this.props.onValueChange(newValue);\r\n    }\r\n  };\r\n\r\n  handleIncrementPressIn = () => {\r\n    this.incrementOnCounter();\r\n    this._timeout = setTimeout(() => {\r\n      this.startInterval(this.incrementOnCounter);\r\n      this.setState({\r\n        isIncrementing: true,\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  handleDecrementPressIn = () => {\r\n    this.decrementOnCounter();\r\n    this._timeout = setTimeout(() => {\r\n      this.startInterval(this.decrementOnCounter);\r\n      this.setState({\r\n        isDecrementing: true,\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  handlePressOut = () => {\r\n    clearTimeout(this._timeout);\r\n    clearInterval(this._interval);\r\n    this.setState({\r\n      isDecrementing: false,\r\n      isIncrementing: false,\r\n    });\r\n  };\r\n\r\n  startInterval = (callback: () => void, speed: number = 300) => {\r\n    let i = 0;\r\n    this._interval = setInterval(() => {\r\n      callback();\r\n      i += 1;\r\n      if (i === 10) {\r\n        clearInterval(this._interval);\r\n        this.startInterval(callback, speed / 2);\r\n      }\r\n    }, speed);\r\n  };\r\n\r\n  render() {\r\n    const { theme, value, minValue, maxValue } = this.props;\r\n    const { primaryColor, primaryLightColor } = theme;\r\n    const { isIncrementing, isDecrementing } = this.state;\r\n    const isMinimum = value === minValue;\r\n    const isMaximum = value === maxValue;\r\n    return (\r\n      <View style={[styles.container, { borderColor: primaryColor }]}>\r\n        <TouchableWithoutFeedback\r\n          onPressIn={this.handleDecrementPressIn}\r\n          onPressOut={this.handlePressOut}\r\n          disabled={isMinimum}\r\n        >\r\n          <View\r\n            style={[\r\n              {\r\n                borderColor: primaryColor,\r\n                backgroundColor:\r\n                  isMinimum || !isDecrementing\r\n                    ? 'transparent'\r\n                    : primaryLightColor,\r\n              },\r\n              styles.stepperIcon,\r\n              styles.stepperMinus,\r\n            ]}\r\n          >\r\n            <Icon\r\n              name=\"md-remove\"\r\n              size={20}\r\n              color={isMinimum ? primaryLightColor : primaryColor}\r\n              style={{ marginTop: 2 }}\r\n            />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n        <TouchableWithoutFeedback\r\n          onPressIn={this.handleIncrementPressIn}\r\n          onPressOut={this.handlePressOut}\r\n          disabled={isMaximum}\r\n        >\r\n          <View\r\n            style={[\r\n              {\r\n                borderColor: primaryColor,\r\n                backgroundColor:\r\n                  isMaximum || !isIncrementing\r\n                    ? 'transparent'\r\n                    : primaryLightColor,\r\n              },\r\n              styles.stepperIcon,\r\n              styles.stepperPlus,\r\n            ]}\r\n          >\r\n            <Icon\r\n              name=\"md-add\"\r\n              size={20}\r\n              color={isMaximum ? primaryLightColor : primaryColor}\r\n              style={{ marginTop: 2 }}\r\n            />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    width: 94,\r\n    height: 29,\r\n    borderWidth: StyleSheet.hairlineWidth * 2,\r\n    borderRadius: 4,\r\n    overflow: 'hidden',\r\n  },\r\n  stepperIcon: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n  },\r\n  stepperMinus: {\r\n    borderRightWidth: StyleSheet.hairlineWidth,\r\n  },\r\n  stepperPlus: {\r\n    borderLeftWidth: StyleSheet.hairlineWidth,\r\n  },\r\n});\r\n\r\nexport default withTheme(Stepper);\r\n"]},"metadata":{},"sourceType":"module"}