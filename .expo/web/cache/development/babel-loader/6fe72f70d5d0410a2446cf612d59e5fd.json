{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\RowItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Icon from \"./Icon\";\nimport { Body, Caption1 } from \"./Typography/Typography\";\nimport { withTheme } from \"../core/theming\";\n\nvar RowItem = function (_React$Component) {\n  _inherits(RowItem, _React$Component);\n\n  var _super = _createSuper(RowItem);\n\n  function RowItem() {\n    var _this;\n\n    _classCallCheck(this, RowItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderRight = function () {\n      var _this$props = _this.props,\n          renderRight = _this$props.renderRight,\n          rightComponent = _this$props.rightComponent;\n\n      if (renderRight) {\n        return React.createElement(View, {\n          style: styles.rightComponent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 14\n          }\n        }, renderRight());\n      }\n\n      if (rightComponent) {\n        return React.createElement(View, {\n          style: styles.rightComponent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }, React.createElement(rightComponent));\n      }\n\n      return null;\n    };\n\n    _this.renderRow = function () {\n      var _this$props2 = _this.props,\n          icon = _this$props2.icon,\n          title = _this$props2.title,\n          subtitle = _this$props2.subtitle,\n          theme = _this$props2.theme,\n          first = _this$props2.first,\n          last = _this$props2.last;\n      return React.createElement(View, {\n        style: [styles.row, {\n          backgroundColor: theme.barColor,\n          borderTopWidth: first ? StyleSheet.hairlineWidth : 0,\n          borderBottomWidth: last ? StyleSheet.hairlineWidth : 0,\n          borderColor: theme.dividerColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, icon && React.createElement(Icon, {\n        name: icon,\n        size: 30,\n        color: theme.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 18\n        }\n      }), React.createElement(View, {\n        style: [styles.titleWrapper, {\n          marginLeft: icon ? 15 : 0,\n          marginRight: title || subtitle ? 15 : 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, !!title && React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }, title), subtitle && React.createElement(Caption1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 24\n        }\n      }, subtitle)), _this.renderRight());\n    };\n\n    _this.renderTouchableRow = function () {\n      return React.createElement(TouchableHighlight, {\n        onPress: _this.props.onPress,\n        underlayColor: _this.props.theme.footnoteColor,\n        style: {\n          backgroundColor: _this.props.theme.barColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }, _this.renderRow());\n    };\n\n    return _this;\n  }\n\n  _createClass(RowItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          last = _this$props3.last,\n          onPress = _this$props3.onPress,\n          theme = _this$props3.theme,\n          icon = _this$props3.icon;\n      return React.createElement(View, {\n        style: {\n          backgroundColor: theme.barColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, onPress ? this.renderTouchableRow() : this.renderRow(), !last && React.createElement(View, {\n        style: [styles.separator, {\n          backgroundColor: theme.dividerColor,\n          marginLeft: icon ? 54 : 15\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return RowItem;\n}(React.Component);\n\nexport default withTheme(RowItem);\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 4,\n    minHeight: 43\n  },\n  titleWrapper: {\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth\n  },\n  rightComponent: {\n    flexGrow: 1,\n    alignItems: 'flex-end'\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/RowItem.js"],"names":["React","Icon","Body","Caption1","withTheme","RowItem","renderRight","props","rightComponent","styles","createElement","renderRow","icon","title","subtitle","theme","first","last","row","backgroundColor","barColor","borderTopWidth","StyleSheet","hairlineWidth","borderBottomWidth","borderColor","dividerColor","primaryColor","titleWrapper","marginLeft","marginRight","renderTouchableRow","onPress","footnoteColor","separator","Component","create","flexDirection","alignItems","paddingHorizontal","paddingVertical","minHeight","justifyContent","height","flexGrow"],"mappings":"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","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, TouchableHighlight } from 'react-native';\r\nimport type { ImageSource } from 'react-native/Libraries/Image/ImageSource';\r\n\r\nimport Icon from './Icon';\r\nimport { Body, Caption1 } from './Typography/Typography';\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types/Theme';\r\n\r\nexport type Props = {\r\n  /**\r\n   * Provided by the ThemeProvider\r\n   */\r\n  theme: Theme,\r\n  /**\r\n   * Icon name\r\n   */\r\n  icon?: ImageSource,\r\n  /**\r\n   * Title string to be displayed\r\n   */\r\n  title: string,\r\n  /**\r\n   * Optional subtitle string\r\n   */\r\n  subtitle?: string,\r\n  /**\r\n   * Right Component\r\n   */\r\n  rightComponent?: React.ComponentType<*>,\r\n  /**\r\n   * Function which should return Element to be rendered on the right side of row\r\n   */\r\n  renderRight?: () => ?React.Element<*>,\r\n  /**\r\n   * RowItem's onPress handler\r\n   */\r\n  onPress?: () => void,\r\n  /**\r\n   * Internal props\r\n   */\r\n  first?: boolean,\r\n  last?: boolean,\r\n};\r\n\r\nclass RowItem extends React.Component<Props> {\r\n  renderRight = () => {\r\n    const { renderRight, rightComponent } = this.props;\r\n\r\n    if (renderRight) {\r\n      return <View style={styles.rightComponent}>{renderRight()}</View>;\r\n    }\r\n\r\n    if (rightComponent) {\r\n      return (\r\n        <View style={styles.rightComponent}>\r\n          {React.createElement(rightComponent)}\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  renderRow = () => {\r\n    const { icon, title, subtitle, theme, first, last } = this.props;\r\n\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.row,\r\n          {\r\n            backgroundColor: theme.barColor,\r\n            borderTopWidth: first ? StyleSheet.hairlineWidth : 0,\r\n            borderBottomWidth: last ? StyleSheet.hairlineWidth : 0,\r\n            borderColor: theme.dividerColor,\r\n          },\r\n        ]}\r\n      >\r\n        {icon && <Icon name={icon} size={30} color={theme.primaryColor} />}\r\n        <View\r\n          style={[\r\n            styles.titleWrapper,\r\n            {\r\n              marginLeft: icon ? 15 : 0,\r\n              marginRight: title || subtitle ? 15 : 0,\r\n            },\r\n          ]}\r\n        >\r\n          {!!title && <Body>{title}</Body>}\r\n          {subtitle && <Caption1>{subtitle}</Caption1>}\r\n        </View>\r\n        {this.renderRight()}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  renderTouchableRow = () => (\r\n    <TouchableHighlight\r\n      onPress={this.props.onPress}\r\n      underlayColor={this.props.theme.footnoteColor}\r\n      style={{ backgroundColor: this.props.theme.barColor }}\r\n    >\r\n      {this.renderRow()}\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  render() {\r\n    const { last, onPress, theme, icon } = this.props;\r\n    return (\r\n      <View style={{ backgroundColor: theme.barColor }}>\r\n        {onPress ? this.renderTouchableRow() : this.renderRow()}\r\n        {!last && (\r\n          <View\r\n            style={[\r\n              styles.separator,\r\n              {\r\n                backgroundColor: theme.dividerColor,\r\n                marginLeft: icon ? 54 : 15,\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(RowItem);\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 4,\r\n    minHeight: 43,\r\n  },\r\n  titleWrapper: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  separator: {\r\n    height: StyleSheet.hairlineWidth,\r\n  },\r\n  rightComponent: {\r\n    flexGrow: 1,\r\n    alignItems: 'flex-end',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}