{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\Slider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../\";\nimport Icon from \"./Icon\";\n\nvar IosSlider = function (_Component) {\n  _inherits(IosSlider, _Component);\n\n  var _super = _createSuper(IosSlider);\n\n  function IosSlider() {\n    _classCallCheck(this, IosSlider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IosSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          minValue = _this$props.minValue,\n          maxValue = _this$props.maxValue,\n          stepValue = _this$props.stepValue,\n          minIconName = _this$props.minIconName,\n          maxIconName = _this$props.maxIconName,\n          minIconColor = _this$props.minIconColor,\n          maxIconColor = _this$props.maxIconColor,\n          minIconSize = _this$props.minIconSize,\n          maxIconSize = _this$props.maxIconSize,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          onValueChange = _this$props.onValueChange,\n          minTrackTintColor = _this$props.minTrackTintColor,\n          maxTrackTintColor = _this$props.maxTrackTintColor,\n          rest = _objectWithoutProperties(_this$props, [\"value\", \"minValue\", \"maxValue\", \"stepValue\", \"minIconName\", \"maxIconName\", \"minIconColor\", \"maxIconColor\", \"minIconSize\", \"maxIconSize\", \"theme\", \"style\", \"onValueChange\", \"minTrackTintColor\", \"maxTrackTintColor\"]);\n\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, minIconName && React.createElement(Icon, {\n        style: styles.icon,\n        name: minIconName,\n        size: minIconSize,\n        color: minIconColor || theme.placeholderColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), React.createElement(Slider, _extends({\n        style: styles.slider,\n        value: value,\n        minimumValue: minValue,\n        maximumValue: maxValue,\n        step: stepValue,\n        onValueChange: onValueChange,\n        minimumTrackTintColor: minTrackTintColor || theme.primaryColor,\n        maximumTrackTintColor: maxTrackTintColor || theme.dividerColor\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      })), maxIconName && React.createElement(Icon, {\n        style: styles.icon,\n        name: maxIconName,\n        size: maxIconSize,\n        color: maxIconColor || theme.placeholderColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return IosSlider;\n}(Component);\n\nIosSlider.defaultProps = {\n  minValue: 0,\n  maxValue: 100,\n  stepValue: 1,\n  minIconSize: 28,\n  maxIconSize: 35\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  slider: {\n    flex: 1,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  icon: {\n    marginTop: 2\n  }\n});\nexport default withTheme(IosSlider);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/Slider.js"],"names":["React","Component","withTheme","Icon","IosSlider","props","value","minValue","maxValue","stepValue","minIconName","maxIconName","minIconColor","maxIconColor","minIconSize","maxIconSize","theme","style","onValueChange","minTrackTintColor","maxTrackTintColor","rest","styles","container","icon","placeholderColor","slider","primaryColor","dividerColor","defaultProps","StyleSheet","create","flexDirection","alignItems","marginHorizontal","flex","marginLeft","marginRight","marginTop"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,SAASC,SAAT;AACA,OAAOC,IAAP;;IAqBMC,S;;;;;;;;;;;;;6BASK;AAAA,wBAkBH,KAAKC,KAlBF;AAAA,UAELC,KAFK,eAELA,KAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,SALK,eAKLA,SALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAAA,UAQLC,YARK,eAQLA,YARK;AAAA,UASLC,YATK,eASLA,YATK;AAAA,UAULC,WAVK,eAULA,WAVK;AAAA,UAWLC,WAXK,eAWLA,WAXK;AAAA,UAYLC,KAZK,eAYLA,KAZK;AAAA,UAaLC,KAbK,eAaLA,KAbK;AAAA,UAcLC,aAdK,eAcLA,aAdK;AAAA,UAeLC,iBAfK,eAeLA,iBAfK;AAAA,UAgBLC,iBAhBK,eAgBLA,iBAhBK;AAAA,UAiBFC,IAjBE;;AAmBP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBN,KAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,WAAW,IACV,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEY,MAAM,CAACE,IADhB;AAEE,QAAA,IAAI,EAAEd,WAFR;AAGE,QAAA,IAAI,EAAEI,WAHR;AAIE,QAAA,KAAK,EAAEF,YAAY,IAAII,KAAK,CAACS,gBAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,MADhB;AAEE,QAAA,KAAK,EAAEpB,KAFT;AAGE,QAAA,YAAY,EAAEC,QAHhB;AAIE,QAAA,YAAY,EAAEC,QAJhB;AAKE,QAAA,IAAI,EAAEC,SALR;AAME,QAAA,aAAa,EAAES,aANjB;AAOE,QAAA,qBAAqB,EAAEC,iBAAiB,IAAIH,KAAK,CAACW,YAPpD;AAQE,QAAA,qBAAqB,EAAEP,iBAAiB,IAAIJ,KAAK,CAACY;AARpD,SASMP,IATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,EAoBGV,WAAW,IACV,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEW,MAAM,CAACE,IADhB;AAEE,QAAA,IAAI,EAAEb,WAFR;AAGE,QAAA,IAAI,EAAEI,WAHR;AAIE,QAAA,KAAK,EAAEF,YAAY,IAAIG,KAAK,CAACS,gBAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,CADF;AA+BD;;;;EA3DqBxB,S;;AAAlBG,S,CACGyB,Y,GAAe;AACpBtB,EAAAA,QAAQ,EAAE,CADU;AAEpBC,EAAAA,QAAQ,EAAE,GAFU;AAGpBC,EAAAA,SAAS,EAAE,CAHS;AAIpBK,EAAAA,WAAW,EAAE,EAJO;AAKpBC,EAAAA,WAAW,EAAE;AALO,C;AA6DxB,IAAMO,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,gBAAgB,EAAE;AAHT,GADoB;AAM/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,UAAU,EAAE,EAFN;AAGNC,IAAAA,WAAW,EAAE;AAHP,GANuB;AAW/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,SAAS,EAAE;AADP;AAXyB,CAAlB,CAAf;AAgBA,eAAepC,SAAS,CAACE,SAAD,CAAxB","sourcesContent":["/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { Slider, View, StyleSheet } from 'react-native';\r\nimport type { Theme } from '../types/Theme';\r\nimport { withTheme } from '../';\r\nimport Icon from './Icon';\r\n\r\ntype Props = {\r\n  value: number,\r\n  stepValue: number,\r\n  minValue?: number,\r\n  maxValue?: number,\r\n  minIconName?: string,\r\n  maxIconName?: string,\r\n  minIconColor?: string,\r\n  maxIconColor?: string,\r\n  minIconSize?: number,\r\n  maxIconSize?: number,\r\n  style?: any,\r\n  theme: Theme,\r\n  onValueChange: (value: number) => void,\r\n  onSlidingComplete?: (value: number) => void,\r\n  minTrackTintColor?: string,\r\n  maxTrackTintColor?: string,\r\n};\r\n\r\nclass IosSlider extends Component<Props> {\r\n  static defaultProps = {\r\n    minValue: 0,\r\n    maxValue: 100,\r\n    stepValue: 1,\r\n    minIconSize: 28,\r\n    maxIconSize: 35,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      minValue,\r\n      maxValue,\r\n      stepValue,\r\n      minIconName,\r\n      maxIconName,\r\n      minIconColor,\r\n      maxIconColor,\r\n      minIconSize,\r\n      maxIconSize,\r\n      theme,\r\n      style,\r\n      onValueChange,\r\n      minTrackTintColor,\r\n      maxTrackTintColor,\r\n      ...rest\r\n    } = this.props;\r\n    return (\r\n      <View style={[styles.container, style]}>\r\n        {minIconName && (\r\n          <Icon\r\n            style={styles.icon}\r\n            name={minIconName}\r\n            size={minIconSize}\r\n            color={minIconColor || theme.placeholderColor}\r\n          />\r\n        )}\r\n        <Slider\r\n          style={styles.slider}\r\n          value={value}\r\n          minimumValue={minValue}\r\n          maximumValue={maxValue}\r\n          step={stepValue}\r\n          onValueChange={onValueChange}\r\n          minimumTrackTintColor={minTrackTintColor || theme.primaryColor}\r\n          maximumTrackTintColor={maxTrackTintColor || theme.dividerColor}\r\n          {...rest}\r\n        />\r\n        {maxIconName && (\r\n          <Icon\r\n            style={styles.icon}\r\n            name={maxIconName}\r\n            size={maxIconSize}\r\n            color={maxIconColor || theme.placeholderColor}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginHorizontal: 10,\r\n  },\r\n  slider: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  icon: {\r\n    marginTop: 2,\r\n  },\r\n});\r\n\r\nexport default withTheme(IosSlider);\r\n"]},"metadata":{},"sourceType":"module"}