{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\Icon.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { withTheme } from \"../\";\n\nvar Icon = function (_React$Component) {\n  _inherits(Icon, _React$Component);\n\n  var _super = _createSuper(Icon);\n\n  function Icon() {\n    _classCallCheck(this, Icon);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Icon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          color = _this$props.color,\n          size = _this$props.size,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"name\", \"color\", \"size\", \"theme\", \"style\"]);\n\n      if (typeof name === 'string') {\n        return React.createElement(Ionicons, {\n          color: color || theme.primaryColor,\n          name: name,\n          size: size,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }\n        });\n      } else if (typeof name === 'object' && name !== null && name.hasOwnProperty('uri') && typeof name.uri === 'string' || typeof name === 'number') {\n        return React.createElement(Image, _extends({}, rest, {\n          source: name,\n          style: [{\n            width: size,\n            height: size\n          }, style],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return React.createElement(View, _extends({}, rest, {\n        style: [{\n          width: size,\n          height: size\n        }, styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }), name);\n    }\n  }]);\n\n  return Icon;\n}(React.Component);\n\nIcon.defaultProps = {\n  size: 50\n};\nexport default withTheme(Icon);\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/Icon.js"],"names":["React","Ionicons","withTheme","Icon","props","name","color","size","theme","style","rest","primaryColor","hasOwnProperty","uri","width","height","styles","container","Component","defaultProps","StyleSheet","create","alignItems","justifyContent","overflow"],"mappings":";;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAOC,QAAP;AAGA,SAASC,SAAT;;IAyBMC,I;;;;;;;;;;;;;6BAIK;AAAA,wBAC8C,KAAKC,KADnD;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,IADd,eACcA,IADd;AAAA,UACoBC,KADpB,eACoBA,KADpB;AAAA,UAC2BC,KAD3B,eAC2BA,KAD3B;AAAA,UACqCC,IADrC;;AAEP,UAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC5B,eACE,oBAAC,QAAD;AACE,UAAA,KAAK,EAAEC,KAAK,IAAIE,KAAK,CAACG,YADxB;AAEE,UAAA,IAAI,EAAEN,IAFR;AAGE,UAAA,IAAI,EAAEE,IAHR;AAIE,UAAA,KAAK,EAAEE,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OATD,MASO,IACJ,OAAOJ,IAAP,KAAgB,QAAhB,IACCA,IAAI,KAAK,IADV,IAGEA,IAAI,CAACO,cAAL,CAAoB,KAApB,KAA8B,OAAOP,IAAI,CAACQ,GAAZ,KAAoB,QAHrD,IAIA,OAAOR,IAAP,KAAgB,QALX,EAML;AACA,eACE,oBAAC,KAAD,eACMK,IADN;AAEE,UAAA,MAAM,EAAEL,IAFV;AAGE,UAAA,KAAK,EAAE,CACL;AACES,YAAAA,KAAK,EAAEP,IADT;AAEEQ,YAAAA,MAAM,EAAER;AAFV,WADK,EAKLE,KALK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAaD;;AACD,aACE,oBAAC,IAAD,eACMC,IADN;AAEE,QAAA,KAAK,EAAE,CACL;AACEI,UAAAA,KAAK,EAAEP,IADT;AAEEQ,UAAAA,MAAM,EAAER;AAFV,SADK,EAKLS,MAAM,CAACC,SALF,EAMLR,KANK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWIJ,IAXJ,CADF;AAeD;;;;EAnDgBL,KAAK,CAACkB,S;;AAAnBf,I,CACGgB,Y,GAAe;AACpBZ,EAAAA,IAAI,EAAE;AADc,C;AAqDxB,eAAeL,SAAS,CAACC,IAAD,CAAxB;AAEA,IAAMa,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,QAAQ,EAAE;AAHD;AADoB,CAAlB,CAAf","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport { Image, View, StyleSheet } from 'react-native';\r\nimport type { ImageSource } from 'react-native/Libraries/Image/ImageSource';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport type { Theme } from '../types/Theme';\r\nimport { withTheme } from '../';\r\n\r\ntype Props = {\r\n  /**\r\n   * ImageSource name. Can be one of https://github.com/oblador/react-native-vector-icons/blob/master/glyphmaps/Ionicons.json or source of ReactNative's `image` or any valid React Component\r\n   */\r\n  name?: ImageSource,\r\n  /**\r\n   * Custom color for icon, default to primary\r\n   */\r\n  color?: string,\r\n  /**\r\n   * Optional icon size, defaults to 50\r\n   */\r\n  size?: number,\r\n  /**\r\n   * Custom styles to apply to the Icon\r\n   */\r\n  style?: any,\r\n  /**\r\n   * Provided by the ThemeProvider\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\nclass Icon extends React.Component<Props> {\r\n  static defaultProps = {\r\n    size: 50,\r\n  };\r\n  render() {\r\n    const { name, color, size, theme, style, ...rest } = this.props;\r\n    if (typeof name === 'string') {\r\n      return (\r\n        <Ionicons\r\n          color={color || theme.primaryColor}\r\n          name={name}\r\n          size={size}\r\n          style={style}\r\n        />\r\n      );\r\n    } else if (\r\n      (typeof name === 'object' &&\r\n        name !== null &&\r\n        // eslint-disable-next-line\r\n        (name.hasOwnProperty('uri') && typeof name.uri === 'string')) ||\r\n      typeof name === 'number'\r\n    ) {\r\n      return (\r\n        <Image\r\n          {...rest}\r\n          source={name}\r\n          style={[\r\n            {\r\n              width: size,\r\n              height: size,\r\n            },\r\n            style,\r\n          ]}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <View\r\n        {...rest}\r\n        style={[\r\n          {\r\n            width: size,\r\n            height: size,\r\n          },\r\n          styles.container,\r\n          style,\r\n        ]}\r\n      >\r\n        {(name: any)}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Icon);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}