{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\SearchBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\n\nvar SearchBar = function (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  var _super = _createSuper(SearchBar);\n\n  function SearchBar() {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      anim: new Animated.Value(0),\n      cancelWidth: 0\n    };\n    _this._input = undefined;\n\n    _this.clearInput = function () {\n      return _this.props.onValueChange && _this.props.onValueChange('');\n    };\n\n    _this.cancelInput = function () {\n      _this.props.onValueChange && _this.props.onValueChange('');\n      if (_this._input) _this._input.blur();\n    };\n\n    _this.focusInput = function () {\n      if (_this._input) _this._input.focus();\n    };\n\n    _this.handleInputFocus = function () {\n      _this.animateTo(1);\n\n      if (typeof _this.props.onFocus === 'function') _this.props.onFocus();\n    };\n\n    _this.handleInputBlur = function () {\n      _this.animateTo(0);\n\n      if (typeof _this.props.onBlur === 'function') _this.props.onBlur();\n    };\n\n    _this.handleLayout = function (_ref) {\n      var width = _ref.nativeEvent.layout.width;\n\n      _this.setState({\n        cancelWidth: width\n      });\n    };\n\n    _this.animateTo = function (toValue) {\n      Animated.timing(_this.state.anim, {\n        toValue: toValue,\n        easing: Easing.linear,\n        duration: _this.props.animationTime\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          placeholder = _this$props.placeholder,\n          onValueChange = _this$props.onValueChange,\n          _this$props$theme = _this$props.theme,\n          barColor = _this$props$theme.barColor,\n          backgroundColor = _this$props$theme.backgroundColor,\n          placeholderColor = _this$props$theme.placeholderColor,\n          textColor = _this$props$theme.textColor,\n          primaryColor = _this$props$theme.primaryColor,\n          withCancel = _this$props.withCancel,\n          cancelText = _this$props.cancelText,\n          animated = _this$props.animated;\n      var _this$state = this.state,\n          anim = _this$state.anim,\n          cancelWidth = _this$state.cancelWidth;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width;\n\n      return React.createElement(View, {\n        style: [{\n          backgroundColor: backgroundColor,\n          width: width\n        }, styles.container],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        underlayColor: backgroundColor,\n        onPress: this.focusInput,\n        onLongPress: this.focusInput,\n        style: styles.inputTouchWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.inputWrapper, {\n          backgroundColor: barColor,\n          width: animated ? anim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [width - 20, width - 20 - cancelWidth]\n          }) : width - 20 - cancelWidth\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-search\",\n        color: placeholderColor,\n        style: styles.searchIcon,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        ref: function ref(_ref2) {\n          _this2._input = _ref2;\n        },\n        style: [{\n          color: textColor\n        }, styles.input],\n        value: value,\n        onChangeText: onValueChange,\n        placeholder: placeholder,\n        placeholderTextColor: placeholderColor,\n        selectionColor: primaryColor,\n        onFocus: this.handleInputFocus,\n        onBlur: this.handleInputBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }), value ? React.createElement(TouchableOpacity, {\n        onPress: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-close-circle\",\n        color: placeholderColor,\n        style: styles.clearIcon,\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      })) : null)), withCancel && React.createElement(View, {\n        onLayout: this.handleLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.cancelInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.Text, {\n        style: [styles.cancelText, {\n          color: primaryColor,\n          opacity: animated ? anim : 1,\n          transform: [{\n            translateX: animated ? anim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [cancelWidth - 20, 0]\n            }) : 0\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }, cancelText))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nSearchBar.defaultProps = {\n  placeholder: 'Search',\n  withCancel: false,\n  cancelText: 'Cancel',\n  animated: false,\n  animationTime: 200\n};\nexport default withTheme(SearchBar);\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 4,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    paddingLeft: 9,\n    backgroundColor: 'transparent',\n    marginTop: 2\n  },\n  clearIcon: {\n    paddingRight: 9,\n    backgroundColor: 'transparent',\n    marginTop: 2\n  },\n  inputTouchWrapper: {\n    flexGrow: 1,\n    borderRadius: 10\n  },\n  inputWrapper: {\n    flexDirection: 'row',\n    paddingBottom: 5,\n    paddingTop: 3,\n    borderRadius: 10,\n    flexGrow: 1,\n    height: 36,\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 7,\n    fontSize: 16,\n    flexGrow: 1\n  },\n  cancelText: {\n    fontSize: 16,\n    paddingHorizontal: 7\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/SearchBar.js"],"names":["React","Icon","withTheme","SearchBar","state","anim","Animated","Value","cancelWidth","_input","undefined","clearInput","props","onValueChange","cancelInput","blur","focusInput","focus","handleInputFocus","animateTo","onFocus","handleInputBlur","onBlur","handleLayout","width","nativeEvent","layout","setState","toValue","timing","easing","Easing","linear","duration","animationTime","start","value","placeholder","theme","barColor","backgroundColor","placeholderColor","textColor","primaryColor","withCancel","cancelText","animated","Dimensions","get","styles","container","inputTouchWrapper","inputWrapper","interpolate","inputRange","outputRange","searchIcon","ref","color","input","clearIcon","opacity","transform","translateX","Component","defaultProps","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","flexDirection","alignItems","paddingLeft","marginTop","paddingRight","flexGrow","borderRadius","height","overflow","fontSize"],"mappings":"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","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport {\r\n  Animated,\r\n  Dimensions,\r\n  Easing,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\n\r\nimport Icon from './Icon';\r\n\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types/Theme';\r\n\r\ntype Props = {\r\n  /**\r\n   * Provided by the ThemeProvider\r\n   */\r\n  theme: Theme,\r\n  /**\r\n   * Callback that is called when the text input's text changes\r\n   */\r\n  onValueChange?: (text: string) => void,\r\n  /**\r\n   * Placeholder of text input. Defaults to \"Search\"\r\n   */\r\n  placeholder?: string,\r\n  /**\r\n   * Value of text input\r\n   */\r\n  value: string,\r\n  /**\r\n   * Indicates presence of Cancel button. Defaults to false\r\n   */\r\n  withCancel?: boolean,\r\n  /**\r\n   * Text of Cancel Button. Defaults to \"Cancel\"\r\n   */\r\n  cancelText?: string,\r\n  /**\r\n   * Indicates if Cancel button and TextInput should animate on focus/blur. Defaults to false\r\n   */\r\n  animated?: boolean,\r\n  /**\r\n   * Animation duration. Default 200ms\r\n   */\r\n  animationTime?: number,\r\n  /**\r\n   * Callback invoked on text input focus\r\n   */\r\n  onFocus?: () => void,\r\n  /**\r\n   * Callback invoked on text input blur\r\n   */\r\n  onBlur?: () => void,\r\n};\r\n\r\ntype State = {\r\n  anim: *,\r\n  cancelWidth: number,\r\n};\r\n\r\nclass SearchBar extends React.Component<Props, State> {\r\n  static defaultProps = {\r\n    placeholder: 'Search',\r\n    withCancel: false,\r\n    cancelText: 'Cancel',\r\n    animated: false,\r\n    animationTime: 200,\r\n  };\r\n  state = {\r\n    anim: new Animated.Value(0),\r\n    cancelWidth: 0,\r\n  };\r\n\r\n  _input = undefined;\r\n\r\n  clearInput = (): void =>\r\n    this.props.onValueChange && this.props.onValueChange('');\r\n  cancelInput = (): void => {\r\n    this.props.onValueChange && this.props.onValueChange('');\r\n    if (this._input) this._input.blur();\r\n  };\r\n  focusInput = (): void => {\r\n    if (this._input) this._input.focus();\r\n  };\r\n  handleInputFocus = (): void => {\r\n    this.animateTo(1);\r\n    if (typeof this.props.onFocus === 'function') this.props.onFocus();\r\n  };\r\n  handleInputBlur = (): void => {\r\n    this.animateTo(0);\r\n    if (typeof this.props.onBlur === 'function') this.props.onBlur();\r\n  };\r\n\r\n  handleLayout = ({\r\n    nativeEvent: {\r\n      layout: { width },\r\n    },\r\n  }) => {\r\n    this.setState({ cancelWidth: width });\r\n  };\r\n\r\n  animateTo = (toValue: 1 | 0): void => {\r\n    // $FlowFixMe Can't use useNativeDriver when animating width\r\n    Animated.timing(this.state.anim, {\r\n      toValue,\r\n      easing: Easing.linear,\r\n      duration: this.props.animationTime,\r\n    }).start();\r\n  };\r\n  render() {\r\n    const {\r\n      value,\r\n      placeholder,\r\n      onValueChange,\r\n      theme: {\r\n        barColor,\r\n        backgroundColor,\r\n        placeholderColor,\r\n        textColor,\r\n        primaryColor,\r\n      },\r\n      withCancel,\r\n      cancelText,\r\n      animated,\r\n    } = this.props;\r\n    const { anim, cancelWidth } = this.state;\r\n    const { width } = Dimensions.get('window');\r\n    return (\r\n      <View style={[{ backgroundColor, width }, styles.container]}>\r\n        <TouchableHighlight\r\n          underlayColor={backgroundColor}\r\n          onPress={this.focusInput}\r\n          onLongPress={this.focusInput}\r\n          style={styles.inputTouchWrapper}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              styles.inputWrapper,\r\n              {\r\n                backgroundColor: barColor,\r\n                width: animated\r\n                  ? anim.interpolate({\r\n                      inputRange: [0, 1],\r\n                      outputRange: [width - 20, width - 20 - cancelWidth],\r\n                    })\r\n                  : width - 20 - cancelWidth,\r\n              },\r\n            ]}\r\n          >\r\n            <Icon\r\n              name=\"ios-search\"\r\n              color={placeholderColor}\r\n              style={styles.searchIcon}\r\n              size={18}\r\n            />\r\n            <TextInput\r\n              ref={ref => {\r\n                this._input = ref;\r\n              }}\r\n              style={[{ color: textColor }, styles.input]}\r\n              value={value}\r\n              onChangeText={onValueChange}\r\n              placeholder={placeholder}\r\n              placeholderTextColor={placeholderColor}\r\n              selectionColor={primaryColor}\r\n              onFocus={this.handleInputFocus}\r\n              onBlur={this.handleInputBlur}\r\n            />\r\n            {value ? (\r\n              <TouchableOpacity onPress={this.clearInput}>\r\n                <Icon\r\n                  name=\"ios-close-circle\"\r\n                  color={placeholderColor}\r\n                  style={styles.clearIcon}\r\n                  size={20}\r\n                />\r\n              </TouchableOpacity>\r\n            ) : null}\r\n          </Animated.View>\r\n        </TouchableHighlight>\r\n        {withCancel && (\r\n          <View onLayout={this.handleLayout}>\r\n            <TouchableOpacity onPress={this.cancelInput}>\r\n              <Animated.Text\r\n                style={[\r\n                  styles.cancelText,\r\n                  // eslint-disable-next-line react-native/no-inline-styles\r\n                  {\r\n                    color: primaryColor,\r\n                    opacity: animated ? anim : 1,\r\n                    transform: [\r\n                      {\r\n                        translateX: animated\r\n                          ? anim.interpolate({\r\n                              inputRange: [0, 1],\r\n                              outputRange: [cancelWidth - 20, 0],\r\n                            })\r\n                          : 0,\r\n                      },\r\n                    ],\r\n                  },\r\n                ]}\r\n              >\r\n                {cancelText}\r\n              </Animated.Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(SearchBar);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingTop: 4,\r\n    paddingBottom: 10,\r\n    paddingHorizontal: 12,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  searchIcon: {\r\n    paddingLeft: 9,\r\n    backgroundColor: 'transparent',\r\n    marginTop: 2,\r\n  },\r\n  clearIcon: {\r\n    paddingRight: 9,\r\n    backgroundColor: 'transparent',\r\n    marginTop: 2,\r\n  },\r\n  inputTouchWrapper: {\r\n    flexGrow: 1,\r\n    borderRadius: 10,\r\n  },\r\n  inputWrapper: {\r\n    flexDirection: 'row',\r\n    paddingBottom: 5,\r\n    paddingTop: 3,\r\n    borderRadius: 10,\r\n    flexGrow: 1,\r\n    height: 36,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    paddingHorizontal: 7,\r\n    fontSize: 16,\r\n    flexGrow: 1,\r\n  },\r\n  cancelText: {\r\n    fontSize: 16,\r\n    paddingHorizontal: 7,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}