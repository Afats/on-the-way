{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\screens\\\\BottomNav.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TabBar, ThemeProvider, Headline, NavigationRow, Icon, RowItem, ArrowRight } from 'react-native-ios-kit';\nimport Constants from 'expo-constants';\nimport { MaterialIcons, MaterialCommunityIcons, Foundation, FontAwesome5 } from '@expo/vector-icons';\nimport { NavigationContainer, NavigationHelpersContext, useNavigationBuilder, TabRouter, TabActions } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Card } from 'react-native-paper';\nimport { BalanceScreen } from \"./Balance\";\nimport { TapOnScreen } from \"./TapOn\";\n\nfunction AccountScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Account\"));\n}\n\nfunction TripScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Trip\"));\n}\n\nfunction RouteScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Route\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function BottomNavigation() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Tap On') {\n            iconName = focused ? 'contactless-payment' : 'contactless-payment';\n            return React.createElement(MaterialCommunityIcons, {\n              name: iconName,\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 22\n              }\n            });\n          } else if (route.name === 'Balance') {\n            iconName = focused ? 'account-balance-wallet' : 'account-balance-wallet';\n            return React.createElement(MaterialIcons, {\n              name: iconName,\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 22\n              }\n            });\n          } else if (route.name === 'Trip') {\n            iconName = focused ? 'map' : 'map';\n            return React.createElement(Foundation, {\n              name: iconName,\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 22\n              }\n            });\n          } else if (route.name === 'Account') {\n            iconName = focused ? 'account-circle' : 'account-circle';\n            return React.createElement(MaterialIcons, {\n              name: iconName,\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 22\n              }\n            });\n          } else if (route.name === 'Route') {\n            iconName = focused ? 'route' : 'route';\n            return React.createElement(FontAwesome5, {\n              name: iconName,\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 22\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'blue',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Balance\",\n    component: BalanceScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Tap On\",\n    component: TapOnScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Trip\",\n    component: TripScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Route\",\n    component: RouteScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: AccountScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/screens/BottomNav.js"],"names":["React","TabBar","ThemeProvider","Headline","NavigationRow","Icon","RowItem","ArrowRight","Constants","MaterialIcons","MaterialCommunityIcons","Foundation","FontAwesome5","NavigationContainer","NavigationHelpersContext","useNavigationBuilder","TabRouter","TabActions","createBottomTabNavigator","Card","BalanceScreen","TapOnScreen","AccountScreen","flex","justifyContent","alignItems","TripScreen","RouteScreen","Tab","BottomNavigation","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet, Image } from 'react-native';\r\nimport {\r\n  TabBar,\r\n  ThemeProvider,\r\n  Headline,\r\n  NavigationRow,\r\n  Icon,\r\n  RowItem,\r\n  ArrowRight } from 'react-native-ios-kit';\r\nimport Constants from 'expo-constants';\r\nimport { MaterialIcons, MaterialCommunityIcons, Foundation, FontAwesome5 } from '@expo/vector-icons';\r\nimport {\r\n  NavigationContainer,\r\n  NavigationHelpersContext,\r\n  useNavigationBuilder,\r\n  TabRouter,\r\n  TabActions,\r\n} from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Card } from 'react-native-paper';\r\nimport { BalanceScreen } from \"./Balance\";\r\nimport {TapOnScreen} from \"./TapOn\"\r\n// import TapSuccScreen from \"./TapSucc\";\r\n\r\nfunction AccountScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Account</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction TripScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Trip</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction RouteScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Route</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function BottomNavigation() {\r\n  return (\r\n      <Tab.Navigator\r\n        //independent={true}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Tap On') {\r\n              iconName = focused ? 'contactless-payment' : 'contactless-payment';\r\n              return <MaterialCommunityIcons name={iconName} size={size} color={color} />;\r\n            } else if (route.name === 'Balance') {\r\n              iconName = focused ? 'account-balance-wallet' : 'account-balance-wallet';\r\n              return <MaterialIcons name={iconName} size={size} color={color} />;\r\n            } else if (route.name === 'Trip') {\r\n              iconName = focused ? 'map' : 'map';\r\n              return <Foundation name={iconName} size={size} color={color} />;\r\n            } else if (route.name === 'Account') {\r\n              iconName = focused ? 'account-circle' : 'account-circle';\r\n              return <MaterialIcons name={iconName} size={size} color={color} />;\r\n            } else if (route.name === 'Route') {\r\n              iconName = focused ? 'route' : 'route';\r\n              return <FontAwesome5 name={iconName} size={size} color={color} />;\r\n            }\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'blue',\r\n          inactiveTintColor: 'gray',\r\n        }}\r\n      >\r\n        <Tab.Screen name=\"Balance\" component={BalanceScreen} />\r\n        <Tab.Screen name=\"Tap On\" component={TapOnScreen} />\r\n        <Tab.Screen name=\"Trip\" component={TripScreen} />\r\n        <Tab.Screen name=\"Route\" component={RouteScreen} />\r\n        <Tab.Screen name=\"Account\" component={AccountScreen} />\r\n      </Tab.Navigator>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}