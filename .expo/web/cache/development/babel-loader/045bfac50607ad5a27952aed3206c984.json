{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\ProgressBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ProgressViewIOS from \"react-native-web/dist/exports/ProgressViewIOS\";\nimport { withTheme } from \"../\";\n\nvar ProgressBar = function (_Component) {\n  _inherits(ProgressBar, _Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          progress = _this$props.progress,\n          primaryColor = _this$props.theme.primaryColor;\n      return React.createElement(ProgressViewIOS, {\n        progress: progress,\n        progressTintColor: primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ProgressBar;\n}(Component);\n\nexport default withTheme(ProgressBar);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/ProgressBar.js"],"names":["React","Component","withTheme","ProgressBar","props","progress","primaryColor","theme"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,SAASC,SAAT;;IAOMC,W;;;;;;;;;;;;;6BACK;AAAA,wBAIH,KAAKC,KAJF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGIC,YAHJ,eAGLC,KAHK,CAGID,YAHJ;AAKP,aACE,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAED,QAA3B;AAAqC,QAAA,iBAAiB,EAAEC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EATuBL,S;;AAY1B,eAAeC,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\r\nimport React, { Component } from 'react';\r\nimport { ProgressViewIOS } from 'react-native';\r\n\r\nimport type { Theme } from '../types/Theme';\r\nimport { withTheme } from '../';\r\n\r\ntype Props = {\r\n  theme: Theme,\r\n  progress: number,\r\n};\r\n\r\nclass ProgressBar extends Component<Props> {\r\n  render() {\r\n    const {\r\n      progress,\r\n      theme: { primaryColor },\r\n    } = this.props;\r\n    return (\r\n      <ProgressViewIOS progress={progress} progressTintColor={primaryColor} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(ProgressBar);\r\n"]},"metadata":{},"sourceType":"module"}