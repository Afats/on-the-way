{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\NavigationRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RowItem from \"./RowItem\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nimport { Body } from \"./Typography\";\n\nvar NavigationRow = function (_React$Component) {\n  _inherits(NavigationRow, _React$Component);\n\n  var _super = _createSuper(NavigationRow);\n\n  function NavigationRow() {\n    var _this;\n\n    _classCallCheck(this, NavigationRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderRightComponent = function () {\n      var _this$props = _this.props,\n          info = _this$props.info,\n          placeholderColor = _this$props.theme.placeholderColor;\n      return React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, info ? React.createElement(Body, {\n        style: {\n          color: placeholderColor,\n          paddingRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, info) : null, React.createElement(Icon, {\n        name: \"ios-arrow-forward\",\n        size: 22,\n        color: placeholderColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(NavigationRow, [{\n    key: \"render\",\n    value: function render() {\n      var onPress = this.props.onPress;\n      return React.createElement(RowItem, _extends({\n        onPress: onPress,\n        renderRight: this.renderRightComponent\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return NavigationRow;\n}(React.Component);\n\nexport default withTheme(NavigationRow);\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/NavigationRow.js"],"names":["React","RowItem","Icon","withTheme","Body","NavigationRow","renderRightComponent","props","info","placeholderColor","theme","styles","row","color","paddingRight","onPress","Component","StyleSheet","create","flexDirection"],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;AACA,SAASC,IAAT;;IAUMC,a;;;;;;;;;;;;;;;;UACJC,oB,GAAuB,YAAM;AAAA,wBAIvB,MAAKC,KAJkB;AAAA,UAEzBC,IAFyB,eAEzBA,IAFyB;AAAA,UAGhBC,gBAHgB,eAGzBC,KAHyB,CAGhBD,gBAHgB;AAK3B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,GACH,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAEJ,gBAAT;AAA2BK,UAAAA,YAAY,EAAE;AAAzC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,IADH,CADG,GAID,IALN,EAME,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,mBAAX;AAA+B,QAAA,IAAI,EAAE,EAArC;AAAyC,QAAA,KAAK,EAAEC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,K;;;;;;;6BACQ;AAAA,UACCM,OADD,GACa,KAAKR,KADlB,CACCQ,OADD;AAEP,aACE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAEA,OADX;AAEE,QAAA,WAAW,EAAE,KAAKT;AAFpB,SAGM,KAAKC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAOD;;;;EA1ByBP,KAAK,CAACgB,S;;AA6BlC,eAAeb,SAAS,CAACE,aAAD,CAAxB;AAEA,IAAMM,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,aAAa,EAAE;AADZ;AAD0B,CAAlB,CAAf","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nimport RowItem from './RowItem';\r\nimport Icon from './Icon';\r\nimport { withTheme } from '../core/theming';\r\nimport { Body } from './Typography';\r\nimport type { Theme } from '../types/Theme';\r\nimport type { Props as RowProps } from './RowItem';\r\n\r\ntype Props = RowProps & {\r\n  theme: Theme,\r\n  onPress: void => void,\r\n  info?: string,\r\n};\r\n\r\nclass NavigationRow extends React.Component<Props> {\r\n  renderRightComponent = () => {\r\n    const {\r\n      info,\r\n      theme: { placeholderColor },\r\n    } = this.props;\r\n    return (\r\n      <View style={styles.row}>\r\n        {info ? (\r\n          <Body style={{ color: placeholderColor, paddingRight: 10 }}>\r\n            {info}\r\n          </Body>\r\n        ) : null}\r\n        <Icon name=\"ios-arrow-forward\" size={22} color={placeholderColor} />\r\n      </View>\r\n    );\r\n  };\r\n  render() {\r\n    const { onPress } = this.props;\r\n    return (\r\n      <RowItem\r\n        onPress={onPress}\r\n        renderRight={this.renderRightComponent}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(NavigationRow);\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}