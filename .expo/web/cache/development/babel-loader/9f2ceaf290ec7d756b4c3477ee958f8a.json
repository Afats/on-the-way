{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\CheckboxRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport RowItem from \"./RowItem\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\n\nvar CheckboxRow = function (_React$Component) {\n  _inherits(CheckboxRow, _React$Component);\n\n  var _super = _createSuper(CheckboxRow);\n\n  function CheckboxRow() {\n    var _this;\n\n    _classCallCheck(this, CheckboxRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderRight = function () {\n      var _this$props = _this.props,\n          selected = _this$props.selected,\n          theme = _this$props.theme;\n\n      if (selected) {\n        return React.createElement(Icon, {\n          name: \"ios-checkmark\",\n          size: 34,\n          color: theme.primaryColor,\n          theme: theme,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return null;\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxRow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RowItem, _extends({\n        renderRight: this.renderRight\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return CheckboxRow;\n}(React.Component);\n\nexport default withTheme(CheckboxRow);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/CheckboxRow.js"],"names":["React","RowItem","Icon","withTheme","CheckboxRow","renderRight","props","selected","theme","primaryColor","Component"],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;;IAUMC,W;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAAA,wBACU,MAAKC,KADf;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,KADA,eACAA,KADA;;AAElB,UAAID,QAAJ,EAAc;AACZ,eACE,oBAAC,IAAD;AACE,UAAA,IAAI,EAAC,eADP;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,KAAK,EAAEC,KAAK,CAACC,YAHf;AAIE,UAAA,KAAK,EAAED,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,aAAO,IAAP;AACD,K;;;;;;;6BAEQ;AACP,aAAO,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKH;AAA3B,SAA4C,KAAKC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAlBuBN,KAAK,CAACU,S;;AAqBhC,eAAeP,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\n\r\nimport RowItem from './RowItem';\r\nimport Icon from './Icon';\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types/Theme';\r\nimport type { Props as RowProps } from './RowItem';\r\n\r\ntype Props = RowProps & {\r\n  theme: Theme,\r\n  selected: boolean,\r\n  onPress: void => void,\r\n};\r\n\r\nclass CheckboxRow extends React.Component<Props> {\r\n  renderRight = () => {\r\n    const { selected, theme } = this.props;\r\n    if (selected) {\r\n      return (\r\n        <Icon\r\n          name=\"ios-checkmark\"\r\n          size={34}\r\n          color={theme.primaryColor}\r\n          theme={theme}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    return <RowItem renderRight={this.renderRight} {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default withTheme(CheckboxRow);\r\n"]},"metadata":{},"sourceType":"module"}