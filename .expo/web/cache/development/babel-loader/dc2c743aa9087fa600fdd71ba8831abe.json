{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\GroupedList\\\\Sections.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { withTheme } from \"../../core/theming\";\nvar SECTION_HEIGHT = 18;\n\nvar Sections = function (_PureComponent) {\n  _inherits(Sections, _PureComponent);\n\n  var _super = _createSuper(Sections);\n\n  function Sections() {\n    var _this;\n\n    _classCallCheck(this, Sections);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      sections: []\n    };\n\n    _this.handleContainerLayout = function (_ref) {\n      var height = _ref.nativeEvent.layout.height;\n\n      _this.setState({\n        sections: _this.prepareSections(height)\n      });\n    };\n\n    _this.handleLayout = function () {\n      NativeModules.UIManager.measure(findNodeHandle(_this.sections), function (x, y, width, height, pageX, pageY) {\n        _this.sectionsHeight = height;\n        _this.sectionsY = pageY;\n      });\n    };\n\n    _this.handleMove = function (_ref2) {\n      var pageY = _ref2.nativeEvent.pageY;\n\n      if (!_this.sectionsHeight || !_this.sectionsY) {\n        return;\n      }\n\n      var sectionIdx = Math.round((pageY - _this.sectionsY) * _this.props.items.length / _this.sectionsHeight);\n\n      if (sectionIdx >= 0 && sectionIdx < _this.props.items.length && _this.currentSectionIdx !== sectionIdx) {\n        _this.currentSectionIdx = sectionIdx;\n\n        _this.props.onSectionPress(sectionIdx);\n      }\n    };\n\n    _this.renderSection = function (item, index) {\n      var _this$props = _this.props,\n          sectionPrimaryColor = _this$props.sectionPrimaryColor,\n          theme = _this$props.theme;\n\n      if (item) {\n        return React.createElement(Text, {\n          key: index,\n          style: [{\n            color: sectionPrimaryColor || theme.primaryColor\n          }, styles.section],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }, item);\n      }\n\n      return React.createElement(View, {\n        key: index,\n        style: styles.dotContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [{\n          backgroundColor: sectionPrimaryColor || theme.primaryColor\n        }, styles.dot],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Sections, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n          return true;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n          return true;\n        },\n        onPanResponderMove: this.handleMove,\n        onPanResponderGrant: this.handleMove\n      });\n    }\n  }, {\n    key: \"prepareSections\",\n    value: function prepareSections(parentHeight) {\n      var items = this.props.items;\n      var slots = (parentHeight - 50) / SECTION_HEIGHT;\n\n      if (slots >= items.length) {\n        return _toConsumableArray(items);\n      }\n\n      if (!(slots % 2)) {\n        slots += 1;\n      }\n\n      var dotsCount = Math.floor(slots / 2);\n      var visibleSectionsCount = slots - dotsCount;\n      var sectionsCountPerDot = (items.length - visibleSectionsCount) / dotsCount;\n      var sum = 0;\n      var visibleSections = [items[0], null];\n\n      for (var i = 0; i < dotsCount - 1; i++) {\n        sum += 1 + sectionsCountPerDot;\n        var visibleSectionIdx = Math.round(sum);\n        visibleSections.push(items[visibleSectionIdx], null);\n      }\n\n      visibleSections.push(items[items.length - 1]);\n      return visibleSections;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          theme = _this$props2.theme;\n      var sections = this.state.sections;\n      return React.createElement(View, {\n        style: [{\n          backgroundColor: theme.barColor\n        }, styles.container, style && style],\n        onLayout: this.handleContainerLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, React.createElement(View, _extends({\n        style: styles.sections\n      }, this.panResponder.panHandlers, {\n        onLayout: this.handleLayout,\n        ref: function ref(view) {\n          _this2.sections = view;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }), sections.map(this.renderSection)));\n    }\n  }]);\n\n  return Sections;\n}(PureComponent);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 20,\n    maxWidth: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sections: {\n    width: 45\n  },\n  section: {\n    fontSize: 14,\n    height: SECTION_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  dotContainer: {\n    height: SECTION_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4\n  }\n});\nexport default withTheme(Sections);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/GroupedList/Sections.js"],"names":["React","PureComponent","withTheme","SECTION_HEIGHT","Sections","state","sections","handleContainerLayout","height","nativeEvent","layout","setState","prepareSections","handleLayout","NativeModules","UIManager","measure","findNodeHandle","x","y","width","pageX","pageY","sectionsHeight","sectionsY","handleMove","sectionIdx","Math","round","props","items","length","currentSectionIdx","onSectionPress","renderSection","item","index","sectionPrimaryColor","theme","color","primaryColor","styles","section","dotContainer","backgroundColor","dot","panResponder","PanResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderGrant","parentHeight","slots","dotsCount","floor","visibleSectionsCount","sectionsCountPerDot","sum","visibleSections","i","visibleSectionIdx","push","style","barColor","container","panHandlers","view","map","StyleSheet","flex","flexDirection","maxWidth","alignItems","justifyContent","fontSize","textAlign","borderRadius"],"mappings":";;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;;;;AAUA,SAASC,SAAT;AAIA,IAAMC,cAAc,GAAG,EAAvB;;IAcMC,Q;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAqBRC,qB,GAAwB,gBAIlB;AAAA,UAFQC,MAER,QAHJC,WAGI,CAFFC,MAEE,CAFQF,MAER;;AACJ,YAAKG,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE,MAAKM,eAAL,CAAqBJ,MAArB;AAAZ,OAAd;AACD,K;;UAEDK,Y,GAAe,YAAM;AACnBC,MAAAA,aAAa,CAACC,SAAd,CAAwBC,OAAxB,CACEC,cAAc,CAAC,MAAKX,QAAN,CADhB,EAEE,UAACY,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcZ,MAAd,EAAsBa,KAAtB,EAA6BC,KAA7B,EAAuC;AACrC,cAAKC,cAAL,GAAsBf,MAAtB;AACA,cAAKgB,SAAL,GAAiBF,KAAjB;AACD,OALH;AAOD,K;;UAEDG,U,GAAa,iBAAgC;AAAA,UAAdH,KAAc,SAA7Bb,WAA6B,CAAda,KAAc;;AAC3C,UAAI,CAAC,MAAKC,cAAN,IAAwB,CAAC,MAAKC,SAAlC,EAA6C;AAC3C;AACD;;AAED,UAAME,UAAU,GAAGC,IAAI,CAACC,KAAL,CAChB,CAACN,KAAK,GAAG,MAAKE,SAAd,IAA2B,MAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAA7C,GAAuD,MAAKR,cAD3C,CAAnB;;AAGA,UACEG,UAAU,IAAI,CAAd,IACAA,UAAU,GAAG,MAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAD9B,IAEA,MAAKC,iBAAL,KAA2BN,UAH7B,EAIE;AACA,cAAKM,iBAAL,GAAyBN,UAAzB;;AACA,cAAKG,KAAL,CAAWI,cAAX,CAA0BP,UAA1B;AACD;AACF,K;;UA+BDQ,a,GAAgB,UAACC,IAAD,EAAYC,KAAZ,EAA8B;AAAA,wBACL,MAAKP,KADA;AAAA,UACpCQ,mBADoC,eACpCA,mBADoC;AAAA,UACfC,KADe,eACfA,KADe;;AAE5C,UAAIH,IAAJ,EAAU;AACR,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEC,KADP;AAEE,UAAA,KAAK,EAAE,CACL;AAAEG,YAAAA,KAAK,EAAEF,mBAAmB,IAAIC,KAAK,CAACE;AAAtC,WADK,EAELC,MAAM,CAACC,OAFF,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOGP,IAPH,CADF;AAWD;;AACD,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEC,KAAX;AAAkB,QAAA,KAAK,EAAEK,MAAM,CAACE,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,eAAe,EAAEP,mBAAmB,IAAIC,KAAK,CAACE;AAAhD,SADK,EAELC,MAAM,CAACI,GAFF,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD,K;;;;;;;gDA3G2B;AAC1B,WAAKC,YAAL,GAAoBC,YAAY,CAACC,MAAb,CAAoB;AACtCC,QAAAA,4BAA4B,EAAE;AAAA,iBAAM,IAAN;AAAA,SADQ;AAEtCC,QAAAA,mCAAmC,EAAE;AAAA,iBAAM,IAAN;AAAA,SAFC;AAGtCC,QAAAA,2BAA2B,EAAE;AAAA,iBAAM,IAAN;AAAA,SAHS;AAItCC,QAAAA,kCAAkC,EAAE;AAAA,iBAAM,IAAN;AAAA,SAJE;AAKtCC,QAAAA,kBAAkB,EAAE,KAAK5B,UALa;AAMtC6B,QAAAA,mBAAmB,EAAE,KAAK7B;AANY,OAApB,CAApB;AAQD;;;oCA4Ce8B,Y,EAAsC;AAAA,UAC5CzB,KAD4C,GAClC,KAAKD,KAD6B,CAC5CC,KAD4C;AAGpD,UAAI0B,KAAK,GAAG,CAACD,YAAY,GAAG,EAAhB,IAAsBpD,cAAlC;;AACA,UAAIqD,KAAK,IAAI1B,KAAK,CAACC,MAAnB,EAA2B;AACzB,kCAAWD,KAAX;AACD;;AAED,UAAI,EAAE0B,KAAK,GAAG,CAAV,CAAJ,EAAkB;AAChBA,QAAAA,KAAK,IAAI,CAAT;AACD;;AAED,UAAMC,SAAS,GAAG9B,IAAI,CAAC+B,KAAL,CAAWF,KAAK,GAAG,CAAnB,CAAlB;AACA,UAAMG,oBAAoB,GAAGH,KAAK,GAAGC,SAArC;AACA,UAAMG,mBAAmB,GACvB,CAAC9B,KAAK,CAACC,MAAN,GAAe4B,oBAAhB,IAAwCF,SAD1C;AAGA,UAAII,GAAG,GAAG,CAAV;AACA,UAAMC,eAAe,GAAG,CAAChC,KAAK,CAAC,CAAD,CAAN,EAAW,IAAX,CAAxB;;AACA,WAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAAS,GAAG,CAAhC,EAAmCM,CAAC,EAApC,EAAwC;AACtCF,QAAAA,GAAG,IAAI,IAAID,mBAAX;AACA,YAAMI,iBAAiB,GAAGrC,IAAI,CAACC,KAAL,CAAWiC,GAAX,CAA1B;AACAC,QAAAA,eAAe,CAACG,IAAhB,CAAqBnC,KAAK,CAACkC,iBAAD,CAA1B,EAA+C,IAA/C;AACD;;AACDF,MAAAA,eAAe,CAACG,IAAhB,CAAqBnC,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAA1B;AAEA,aAAO+B,eAAP;AACD;;;6BA6BQ;AAAA;;AAAA,yBACkB,KAAKjC,KADvB;AAAA,UACCqC,KADD,gBACCA,KADD;AAAA,UACQ5B,KADR,gBACQA,KADR;AAAA,UAEChC,QAFD,GAEc,KAAKD,KAFnB,CAECC,QAFD;AAIP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACL;AAAEsC,UAAAA,eAAe,EAAEN,KAAK,CAAC6B;AAAzB,SADK,EAEL1B,MAAM,CAAC2B,SAFF,EAGLF,KAAK,IAAIA,KAHJ,CADT;AAME,QAAA,QAAQ,EAAE,KAAK3D,qBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEkC,MAAM,CAACnC;AADhB,SAEM,KAAKwC,YAAL,CAAkBuB,WAFxB;AAGE,QAAA,QAAQ,EAAE,KAAKxD,YAHjB;AAIE,QAAA,GAAG,EAAE,aAAAyD,IAAI,EAAI;AACX,UAAA,MAAI,CAAChE,QAAL,GAAgBgE,IAAhB;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQGhE,QAAQ,CAACiE,GAAT,CAAa,KAAKrC,aAAlB,CARH,CARF,CADF;AAqBD;;;;EA3IoBjC,a;;AA8IvB,IAAMwC,MAAM,GAAG+B,UAAU,CAACxB,MAAX,CAAkB;AAC/BoB,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTtD,IAAAA,KAAK,EAAE,EAHE;AAITuD,IAAAA,QAAQ,EAAE,EAJD;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,cAAc,EAAE;AANP,GADoB;AAS/BvE,EAAAA,QAAQ,EAAE;AACRc,IAAAA,KAAK,EAAE;AADC,GATqB;AAY/BsB,EAAAA,OAAO,EAAE;AACPoC,IAAAA,QAAQ,EAAE,EADH;AAEPtE,IAAAA,MAAM,EAAEL,cAFD;AAGP4E,IAAAA,SAAS,EAAE,QAHJ;AAIPnC,IAAAA,eAAe,EAAE;AAJV,GAZsB;AAkB/BD,EAAAA,YAAY,EAAE;AACZnC,IAAAA,MAAM,EAAEL,cADI;AAEZ0E,IAAAA,cAAc,EAAE,QAFJ;AAGZD,IAAAA,UAAU,EAAE;AAHA,GAlBiB;AAuB/B/B,EAAAA,GAAG,EAAE;AACHzB,IAAAA,KAAK,EAAE,CADJ;AAEHZ,IAAAA,MAAM,EAAE,CAFL;AAGHwE,IAAAA,YAAY,EAAE;AAHX;AAvB0B,CAAlB,CAAf;AA8BA,eAAe9E,SAAS,CAACE,QAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  PanResponder,\r\n  findNodeHandle,\r\n  NativeModules,\r\n} from 'react-native';\r\n\r\nimport { withTheme } from '../../core/theming';\r\n\r\nimport type { Theme } from '../../types/Theme';\r\n\r\nconst SECTION_HEIGHT = 18;\r\n\r\ntype Props = {\r\n  theme: Theme,\r\n  onSectionPress: (id: number) => void,\r\n  items: Array<string>,\r\n  sectionPrimaryColor: ?string,\r\n  style: ?*,\r\n};\r\n\r\ntype State = {\r\n  sections: Array<?string>,\r\n};\r\n\r\nclass Sections extends PureComponent<Props, State> {\r\n  state = {\r\n    sections: [],\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.panResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onStartShouldSetPanResponderCapture: () => true,\r\n      onMoveShouldSetPanResponder: () => true,\r\n      onMoveShouldSetPanResponderCapture: () => true,\r\n      onPanResponderMove: this.handleMove,\r\n      onPanResponderGrant: this.handleMove,\r\n    });\r\n  }\r\n\r\n  sectionsHeight: ?number;\r\n  sectionsY: ?number;\r\n  panResponder: Object;\r\n  sections: ?any;\r\n  currentSectionIdx: ?number;\r\n\r\n  handleContainerLayout = ({\r\n    nativeEvent: {\r\n      layout: { height },\r\n    },\r\n  }) => {\r\n    this.setState({ sections: this.prepareSections(height) });\r\n  };\r\n\r\n  handleLayout = () => {\r\n    NativeModules.UIManager.measure(\r\n      findNodeHandle(this.sections),\r\n      (x, y, width, height, pageX, pageY) => {\r\n        this.sectionsHeight = height;\r\n        this.sectionsY = pageY;\r\n      }\r\n    );\r\n  };\r\n\r\n  handleMove = ({ nativeEvent: { pageY } }) => {\r\n    if (!this.sectionsHeight || !this.sectionsY) {\r\n      return;\r\n    }\r\n\r\n    const sectionIdx = Math.round(\r\n      ((pageY - this.sectionsY) * this.props.items.length) / this.sectionsHeight\r\n    );\r\n    if (\r\n      sectionIdx >= 0 &&\r\n      sectionIdx < this.props.items.length &&\r\n      this.currentSectionIdx !== sectionIdx\r\n    ) {\r\n      this.currentSectionIdx = sectionIdx;\r\n      this.props.onSectionPress(sectionIdx);\r\n    }\r\n  };\r\n\r\n  prepareSections(parentHeight: number): Array<?string> {\r\n    const { items } = this.props;\r\n\r\n    let slots = (parentHeight - 50) / SECTION_HEIGHT;\r\n    if (slots >= items.length) {\r\n      return [...items];\r\n    }\r\n\r\n    if (!(slots % 2)) {\r\n      slots += 1;\r\n    }\r\n\r\n    const dotsCount = Math.floor(slots / 2);\r\n    const visibleSectionsCount = slots - dotsCount;\r\n    const sectionsCountPerDot =\r\n      (items.length - visibleSectionsCount) / dotsCount;\r\n\r\n    let sum = 0;\r\n    const visibleSections = [items[0], null]; // make first item visible\r\n    for (let i = 0; i < dotsCount - 1; i++) {\r\n      sum += 1 + sectionsCountPerDot;\r\n      const visibleSectionIdx = Math.round(sum);\r\n      visibleSections.push(items[visibleSectionIdx], null);\r\n    }\r\n    visibleSections.push(items[items.length - 1]); // make last item visible\r\n    // Each null in visbleSections array is a dot\r\n    return visibleSections;\r\n  }\r\n\r\n  renderSection = (item: any, index: number) => {\r\n    const { sectionPrimaryColor, theme } = this.props;\r\n    if (item) {\r\n      return (\r\n        <Text\r\n          key={index}\r\n          style={[\r\n            { color: sectionPrimaryColor || theme.primaryColor },\r\n            styles.section,\r\n          ]}\r\n        >\r\n          {item}\r\n        </Text>\r\n      );\r\n    }\r\n    return (\r\n      <View key={index} style={styles.dotContainer}>\r\n        <View\r\n          style={[\r\n            { backgroundColor: sectionPrimaryColor || theme.primaryColor },\r\n            styles.dot,\r\n          ]}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { style, theme } = this.props;\r\n    const { sections } = this.state;\r\n\r\n    return (\r\n      <View\r\n        style={[\r\n          { backgroundColor: theme.barColor },\r\n          styles.container,\r\n          style && style,\r\n        ]}\r\n        onLayout={this.handleContainerLayout}\r\n      >\r\n        <View\r\n          style={styles.sections}\r\n          {...this.panResponder.panHandlers}\r\n          onLayout={this.handleLayout}\r\n          ref={view => {\r\n            this.sections = view;\r\n          }}\r\n        >\r\n          {sections.map(this.renderSection)}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    width: 20,\r\n    maxWidth: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  sections: {\r\n    width: 45,\r\n  },\r\n  section: {\r\n    fontSize: 14,\r\n    height: SECTION_HEIGHT,\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  dotContainer: {\r\n    height: SECTION_HEIGHT,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  dot: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n\r\nexport default withTheme(Sections);\r\n"]},"metadata":{},"sourceType":"module"}