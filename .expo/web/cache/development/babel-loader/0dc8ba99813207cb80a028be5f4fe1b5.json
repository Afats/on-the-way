{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\DESN2000\\\\app_stuff\\\\node_modules\\\\react-native-ios-kit\\\\src\\\\components\\\\SwitchRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport RowItem from \"./RowItem\";\nimport Switch from \"./Switch\";\nimport { withTheme } from \"../core/theming\";\n\nvar SwitchRow = function (_React$Component) {\n  _inherits(SwitchRow, _React$Component);\n\n  var _super = _createSuper(SwitchRow);\n\n  function SwitchRow() {\n    var _this;\n\n    _classCallCheck(this, SwitchRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderRight = function () {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          onValueChange = _this$props.onValueChange,\n          theme = _this$props.theme;\n      return React.createElement(Switch, {\n        onValueChange: onValueChange,\n        theme: theme,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 12\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SwitchRow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RowItem, _extends({\n        title: \"\",\n        renderRight: this.renderRight\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return SwitchRow;\n}(React.Component);\n\nexport default withTheme(SwitchRow);","map":{"version":3,"sources":["D:/Documents/DESN2000/app_stuff/node_modules/react-native-ios-kit/src/components/SwitchRow.js"],"names":["React","RowItem","Switch","withTheme","SwitchRow","renderRight","props","value","onValueChange","theme","Component"],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,SAASC,SAAT;;IASMC,S;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAAA,wBACsB,MAAKC,KAD3B;AAAA,UACVC,KADU,eACVA,KADU;AAAA,UACHC,aADG,eACHA,aADG;AAAA,UACYC,KADZ,eACYA,KADZ;AAElB,aAAO,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAED,aAAvB;AAAsC,QAAA,KAAK,EAAEC,KAA7C;AAAoD,QAAA,KAAK,EAAEF,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,K;;;;;;;6BAEQ;AACP,aAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,EAAf;AAAkB,QAAA,WAAW,EAAE,KAAKF;AAApC,SAAqD,KAAKC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EARqBN,KAAK,CAACU,S;;AAW9B,eAAeP,SAAS,CAACC,SAAD,CAAxB","sourcesContent":["/* @flow */\r\nimport * as React from 'react';\r\n\r\nimport RowItem from './RowItem';\r\nimport Switch from './Switch';\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types/Theme';\r\n\r\ntype Props = {\r\n  theme: Theme,\r\n  value: boolean,\r\n  onValueChange?: (value: boolean) => *,\r\n};\r\n\r\nclass SwitchRow extends React.Component<Props> {\r\n  renderRight = () => {\r\n    const { value, onValueChange, theme } = this.props;\r\n    return <Switch onValueChange={onValueChange} theme={theme} value={value} />;\r\n  };\r\n\r\n  render() {\r\n    return <RowItem title=\"\" renderRight={this.renderRight} {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default withTheme(SwitchRow);\r\n"]},"metadata":{},"sourceType":"module"}